var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AuthController.html",[0,1.245,1,2.012]],["body/controllers/AuthController.html",[0,1.584,1,2.126,2,0.873,3,0.192,4,0.192,5,0.163,6,1.833,7,1.41,8,2.2,9,2.065,10,3.316,11,3.316,12,3.316,13,3.081,14,3.316,15,2.126,16,0.286,17,1.437,18,2.315,19,2.557,20,3.316,21,1.316,22,2.2,23,2.755,24,1.365,25,0.034,26,2.763,27,3.057,28,0.719,29,2.2,30,1.925,31,1.253,32,0.577,33,1.486,34,2.724,35,2.597,36,2.319,37,3.344,38,3.871,39,2.557,40,2.2,41,2.763,42,2.2,43,2.398,44,2.398,45,3.316,46,2.2,47,3.316,48,2.2,49,1.908,50,2.763,51,2.2,52,2.763,53,2.107,54,2.2,55,0.577,56,0.569,57,1.41,58,0.801,59,0.953,60,0.953,61,1.266,62,2.315,63,2.2,64,1.591,65,2.2,66,0.192,67,0.011,68,2.483,69,1.266,70,2.2,71,1.925,72,2.2,73,2.2,74,2.2,75,2.2,76,2.2,77,2.2,78,2.2,79,0.017,80,0.017]],["title/injectables/AuthService.html",[62,1.634,81,1.245]],["body/injectables/AuthService.html",[3,0.146,4,0.146,5,0.124,9,1.659,16,0.217,17,1.159,18,1.744,19,1.926,21,0.662,25,0.034,27,2.948,28,0.724,30,1.815,31,1.261,32,0.581,33,1.401,34,1.268,36,2.115,37,2.898,39,2.898,43,2.769,44,3.234,53,1.268,55,0.595,56,0.432,59,0.723,60,0.723,61,0.96,62,1.393,66,0.146,67,0.008,68,1.994,71,2.328,79,0.014,80,0.014,81,1.062,82,0.96,83,1.391,84,0.634,85,2.686,86,3.348,87,2.675,88,2.675,89,1.07,90,1.669,91,3.725,92,3.348,93,3.011,94,3.348,95,2.675,96,2.675,97,1.815,98,1.669,99,2.675,100,1.934,101,3.19,102,2.789,103,2.675,104,2.675,105,1.057,106,1.669,107,2.675,108,4.303,109,2.229,110,2.12,111,1.669,112,2.229,113,2.203,114,2.203,115,2.675,116,1.669,117,2.675,118,1.328,119,3.491,120,1.715,121,1.07,122,1.391,123,1.391,124,1.391,125,2.675,126,1.207,127,0.723,128,0.96,129,1.391,130,0.662,131,0.96,132,1.391,133,1.669,134,1.669,135,1.669,136,1.669,137,3.829,138,1.669,139,1.669,140,1.669,141,2.411,142,1.669,143,1.669,144,1.669,145,2.675,146,3.829,147,1.669,148,1.669,149,1.669,150,1.07,151,1.669,152,1.669,153,3.348,154,3.348,155,3.348,156,1.669,157,1.669,158,2.789,159,2.769,160,3.19,161,1.669,162,1.669,163,1.669,164,1.669,165,1.669,166,1.669,167,1.669,168,1.669,169,1.669,170,1.669,171,1.669,172,1.669,173,1.669,174,1.391,175,1.391,176,1.391,177,1.669,178,1.669,179,1.669,180,1.669,181,1.669,182,1.669,183,1.669]],["title/modules/BankServiceModule.html",[184,1.049,185,2.012]],["body/modules/BankServiceModule.html",[3,0.282,4,0.282,5,0.239,25,0.033,32,0.419,55,0.682,56,0.834,66,0.282,67,0.016,79,0.022,80,0.022,91,4.41,113,1.856,114,1.856,118,1.28,121,2.068,127,1.397,160,4.41,184,1.653,185,3.799,186,1.397,187,1.397,188,1.68,189,1.68,190,1.397,191,1.68,192,1.68,193,2.687,194,2.687,195,3.28,196,3.28,197,2.272,198,1.68,199,3.226,200,3.226,201,2.844,202,1.856,203,3.226,204,3.226,205,1.397,206,3.226,207,2.068,208,3.634,209,3.226,210,4.362,211,3.226,212,3.226,213,3.226,214,3.226,215,3.226,216,3.226,217,2.333,218,3.226,219,3.226,220,2.687,221,3.226,222,2.687,223,3.226,224,3.226,225,3.226,226,2.687,227,3.226,228,3.226,229,3.226,230,3.226]],["title/controllers/BankingController.html",[0,1.245,231,2.012]],["body/controllers/BankingController.html",[0,0.928,2,0.928,3,0.204,4,0.204,5,0.173,7,1.498,9,2.12,13,3.261,15,2.225,16,0.304,17,1.503,23,2.789,24,1.407,25,0.034,28,0.741,30,1.984,31,1.292,32,0.595,33,1.532,34,2.76,35,2.64,36,2.362,37,2.635,38,3.707,49,2.95,50,2.891,55,0.563,56,0.605,57,1.498,58,0.851,59,1.013,64,1.69,66,0.204,67,0.012,68,2.548,69,1.345,71,1.984,79,0.018,80,0.018,231,2.225,232,1.947,233,2.635,234,3.47,235,2.891,236,2.891,237,2.936,238,3.47,239,2.338,240,5.451,241,2.635,242,2.338,243,2.338,244,2.338,245,2.338,246,2.338,247,2.338,248,2.51,249,2.338,250,2.891,251,2.51,252,3.47,253,2.171,254,1.69,255,2.338,256,1.498,257,2.338,258,2.338,259,2.338,260,2.338,261,2.338,262,2.338,263,3.47,264,2.338,265,2.338]],["title/injectables/BankingGatewayService.html",[81,1.245,266,1.634]],["body/injectables/BankingGatewayService.html",[3,0.196,4,0.196,5,0.166,9,0.972,13,1.291,15,2.158,16,0.292,17,1.458,18,1.753,19,1.937,21,2.078,25,0.034,27,1.753,28,0.872,30,2.333,31,1.519,32,0.7,33,1.801,35,2.394,36,2.268,39,3.228,49,1.291,55,0.517,56,0.58,58,0.817,66,0.196,67,0.011,71,2.268,79,0.017,80,0.017,81,1.336,82,1.291,85,1.438,89,1.438,97,2.128,105,1.286,109,2.804,110,2.394,120,3.452,124,1.869,141,1.937,217,1.623,233,1.937,235,2.804,241,1.291,266,1.753,267,1.869,268,3.366,269,3.366,270,3.366,271,3.366,272,3.366,273,2.804,274,2.434,275,2.158,276,3.366,277,2.244,278,3.739,279,2.244,280,3.366,281,2.244,282,2.804,283,2.727,284,2.244,285,3.366,286,2.244,287,2.804,288,2.244,289,2.244,290,3.366,291,2.244,292,3.366,293,2.244,294,1.869,295,2.244,296,2.244,297,2.244,298,2.244,299,2.244,300,3.366,301,2.244,302,1.937,303,2.244]],["title/modules/BankingModule.html",[184,1.049,195,1.806]],["body/modules/BankingModule.html",[2,1.85,3,0.311,4,0.311,5,0.264,25,0.033,55,0.675,56,0.922,66,0.311,67,0.018,79,0.024,80,0.024,118,1.415,127,1.544,184,1.737,186,1.544,187,1.544,188,1.857,189,1.857,190,1.544,191,2.705,192,1.857,195,3.558,197,2.428,198,1.857,201,2.682,205,2.654,207,2.285,231,3.329,253,2.78,254,2.578,304,2.97,305,2.97,306,2.97,307,3.565,308,3.565,309,2.051,310,2.97,311,2.578,312,3.565]],["title/injectables/BankingService.html",[81,1.245,253,1.488]],["body/injectables/BankingService.html",[3,0.144,4,0.144,5,0.123,9,1.806,16,0.215,17,1.149,18,2.533,21,1.319,25,0.034,27,3.039,28,0.72,30,1.806,31,1.176,32,0.578,33,1.394,34,1.576,36,2.321,37,2.692,38,3.517,39,3.25,49,2.19,53,2.541,55,0.56,56,0.427,59,0.716,60,0.716,61,0.951,66,0.144,67,0.008,68,2.318,69,0.951,71,2.446,79,0.014,80,0.014,81,1.053,82,0.951,84,0.628,85,1.059,89,1.059,93,2.44,105,1.16,120,3.301,122,1.376,123,1.376,126,1.195,127,0.716,130,0.656,141,2.798,158,1.376,159,1.195,236,2.21,237,1.701,241,1.527,251,1.918,253,1.258,256,2.131,273,2.21,275,1.701,282,2.21,283,2.436,287,2.21,302,0.951,309,0.951,310,1.376,313,1.376,314,1.258,315,4.168,316,2.21,317,1.652,318,1.976,319,3.806,320,1.652,321,2.77,322,2.653,323,2.21,324,2.653,325,1.652,326,4.051,327,4.863,328,4.051,329,1.652,330,3.171,331,1.652,332,2.653,333,1.652,334,1.652,335,1.652,336,1.652,337,1.376,338,1.652,339,3.806,340,3.806,341,3.806,342,3.806,343,1.652,344,3.324,345,1.652,346,1.652,347,1.652,348,1.652,349,2.653,350,1.652,351,1.652,352,1.652,353,1.652,354,1.195,355,1.652,356,1.652,357,1.652,358,1.652]],["title/classes/BaseDto.html",[67,0.016,359,1.488]],["body/classes/BaseDto.html",[3,0.345,4,0.345,5,0.293,16,0.514,25,0.032,28,0.927,32,0.744,33,2.07,53,2.586,66,0.345,67,0.02,79,0.026,80,0.026,84,1.18,105,1.078,314,2.586,359,2.362,360,1.713,361,3.294,362,3.497,363,3.945,364,3.945,365,3.863,366,3.954,367,3.954,368,3.954,369,3.954]],["title/classes/BaseEntity.html",[67,0.016,370,1.488]],["body/classes/BaseEntity.html",[3,0.317,4,0.317,5,0.27,16,0.681,24,1.705,25,0.033,28,0.898,32,0.721,53,2.485,55,0.543,66,0.317,67,0.018,79,0.024,80,0.024,84,1.118,105,1.022,130,1.442,359,2.485,360,1.574,362,3.36,363,3.791,364,3.791,365,3.779,370,2.238,371,3.027,372,4.72,373,4.367,374,3.634,375,4.367,376,3.634,377,3.634,378,3.634,379,4.367,380,3.634,381,4.72,382,2.091,383,3.634]],["title/classes/DataResponse.html",[60,1.359,67,0.016]],["body/classes/DataResponse.html",[3,0.353,4,0.353,5,0.3,16,0.525,25,0.031,28,0.892,32,0.716,33,2.026,34,2.612,60,2.188,66,0.353,67,0.02,79,0.026,80,0.026,84,1.196,105,1.093,141,3.17,159,3.984,314,2.972,360,1.75,384,3.366,385,4.207,386,4.04,387,5.05,388,4.04,389,4.04]],["title/modules/IdentityModule.html",[184,1.049,196,1.806]],["body/modules/IdentityModule.html",[1,3.269,2,1.805,3,0.3,4,0.3,5,0.255,25,0.033,55,0.7,56,0.888,58,1.25,62,3.023,66,0.3,67,0.017,79,0.023,80,0.023,118,1.363,121,2.201,127,1.487,128,1.976,129,2.86,131,2.617,132,2.86,184,1.705,186,1.487,187,1.487,188,1.788,189,1.788,190,1.487,191,2.656,192,1.788,196,3.459,197,2.369,198,1.788,201,2.617,205,2.514,207,2.201,208,3.789,311,2.483,390,2.86,391,3.434,392,2.86,393,3.434,394,2.483,395,2.483,396,3.434,397,3.434,398,3.434]],["title/classes/LoginCredentials.html",[67,0.016,110,1.488]],["body/classes/LoginCredentials.html",[3,0.32,4,0.32,5,0.272,16,0.477,24,1.459,25,0.033,28,0.769,31,1.035,32,0.617,53,1.74,55,0.547,66,0.415,67,0.024,79,0.024,80,0.024,84,1.125,97,1.74,105,1.334,110,2.252,113,3.205,114,3.205,150,2.352,314,2.967,359,2.252,360,1.59,399,2.654,400,4.493,401,3.67,402,3.67,403,2.352,404,2.654,405,1.911]],["title/entities/LoginEntity.html",[131,1.806,406,1.245]],["body/entities/LoginEntity.html",[3,0.354,4,0.354,5,0.301,16,0.527,21,2.19,24,1.555,25,0.033,28,0.819,32,0.658,55,0.583,66,0.354,67,0.02,79,0.026,80,0.026,84,1.199,105,1.251,119,4.597,130,1.609,131,2.912,370,2.399,382,3.422,405,2.112,406,1.609,407,2.333,408,3.378,409,4.055,410,4.055,411,2.599,412,4.055]],["title/entities/MessageLogEntity.html",[406,1.245,413,1.806]],["body/entities/MessageLogEntity.html",[3,0.333,4,0.333,5,0.283,16,0.496,21,2.13,24,1.649,25,0.033,28,0.869,32,0.698,35,2.545,55,0.561,66,0.333,67,0.019,79,0.025,80,0.025,84,1.155,105,1.293,130,1.516,370,2.311,382,3.494,405,1.989,406,1.516,407,2.198,411,2.448,413,2.805,414,4.089,415,3.182,416,4.472,417,3.82,418,3.82,419,3.82,420,3.82]],["title/classes/MessageModel.html",[23,1.488,67,0.016]],["body/classes/MessageModel.html",[3,0.369,4,0.369,5,0.313,16,0.549,21,2.23,23,2.461,25,0.032,28,0.84,32,0.674,35,2.664,55,0.486,66,0.369,67,0.021,79,0.027,80,0.027,84,1.229,105,1.123,314,2.904,359,2.002,360,1.829,385,4.324,404,3.054,421,3.518,422,4.223,423,4.223]],["title/controllers/MessagesController.html",[0,1.245,424,2.012]],["body/controllers/MessagesController.html",[0,0.82,2,0.82,3,0.18,4,0.18,5,0.153,7,1.324,13,2.815,16,0.268,17,1.37,18,2.001,19,2.21,23,2.895,24,1.564,25,0.033,26,2.634,27,2.001,28,0.824,30,2.205,31,1.436,32,0.661,33,1.702,34,2.882,35,0.98,36,2.205,41,2.634,49,2.21,52,3.585,55,0.534,56,0.534,57,1.324,58,0.752,59,0.895,66,0.18,67,0.01,68,1.076,69,1.189,71,2.205,79,0.016,80,0.016,100,1.494,237,1.324,241,2.21,248,1.494,256,1.324,274,2.286,275,2.027,302,2.476,316,2.634,318,1.499,321,1.721,326,1.721,337,1.721,424,2.027,425,1.721,426,2.066,427,3.162,428,2.634,429,2.066,430,6.079,431,6.106,432,3.162,433,2.066,434,2.066,435,2.066,436,2.066,437,2.066,438,2.066,439,2.066,440,2.066,441,2.066,442,2.066,443,3.162,444,2.066,445,2.066,446,3.162,447,2.066,448,2.066,449,5.25,450,2.066,451,2.066,452,3.162,453,2.066,454,2.066,455,5.09,456,2.066,457,2.066,458,2.066,459,2.066,460,2.066,461,2.066]],["title/injectables/MessagesService.html",[81,1.245,318,1.488]],["body/injectables/MessagesService.html",[3,0.269,4,0.269,5,0.229,16,0.401,17,1.832,21,1.679,23,1.462,25,0.033,28,0.685,30,2.092,31,1.193,32,0.627,33,1.415,35,2.581,36,1.336,55,0.685,56,0.798,58,1.123,59,1.832,60,1.336,61,1.775,64,2.23,66,0.269,67,0.015,71,1.832,79,0.022,80,0.022,81,1.679,82,1.775,85,2.712,89,1.977,93,3.331,105,1.217,126,2.23,127,1.336,130,1.224,217,2.23,278,4.328,318,2.005,362,1.977,365,1.977,413,1.775,414,2.23,416,2.569,462,2.569,463,4.23,464,3.084,465,4.828,466,3.084,467,4.23,468,4.23,469,5.196,470,5.196,471,3.084,472,3.084,473,4.23,474,3.524,475,2.569,476,3.084,477,3.084,478,3.084,479,3.084,480,3.084,481,3.084,482,3.084]],["title/modules/MessengerModule.html",[184,1.049,205,1.359]],["body/modules/MessengerModule.html",[2,1.812,3,0.301,4,0.301,5,0.256,25,0.033,31,0.974,55,0.669,56,0.894,58,1.258,66,0.301,67,0.017,79,0.023,80,0.023,118,1.371,127,1.497,184,1.71,186,1.497,187,1.497,188,1.799,189,1.799,190,1.497,191,2.664,192,2.664,197,2.378,198,1.799,201,1.988,205,2.568,207,2.214,233,1.988,318,2.958,394,2.498,395,3.302,413,1.988,424,3.279,475,2.878,483,2.878,484,2.878,485,2.878,486,3.455,487,3.455,488,3.455,489,3.455,490,3.455,491,2.878,492,2.878,493,2.878,494,2.878,495,2.878]],["title/entities/StatementEntity.html",[309,1.806,406,1.245]],["body/entities/StatementEntity.html",[3,0.338,4,0.338,5,0.287,16,0.503,21,2.144,24,1.659,25,0.033,28,0.874,32,0.702,55,0.566,66,0.338,67,0.019,79,0.025,80,0.025,84,1.165,105,1.23,130,1.537,302,3.109,309,2.829,354,3.907,370,2.331,382,3.504,405,2.017,406,1.537,407,2.228,411,2.482,496,3.226,497,4.096,498,3.872,499,3.872,500,3.872,501,3.872]],["title/classes/TransactionDto.html",[67,0.016,283,1.634]],["body/classes/TransactionDto.html",[3,0.358,4,0.358,5,0.304,16,0.533,24,1.565,25,0.033,28,0.825,32,0.662,55,0.472,66,0.358,67,0.02,79,0.026,80,0.026,84,1.207,105,1.103,283,2.654,302,3.191,314,2.883,354,4.01,360,1.776,400,4.314,403,2.628,497,4.245,502,3.415,503,4.099,504,4.099]],["title/classes/UserDto.html",[67,0.016,97,1.488]],["body/classes/UserDto.html",[3,0.259,4,0.259,5,0.22,16,0.386,24,1.57,25,0.033,28,0.941,31,1.335,32,0.755,33,1.944,53,2.244,55,0.474,66,0.36,67,0.021,79,0.021,80,0.021,84,0.976,97,1.954,105,1.318,110,1.408,113,2.942,114,2.942,150,3.034,314,2.97,359,2.703,360,1.286,362,2.642,363,2.98,364,2.98,365,3.034,399,2.147,400,4.404,403,1.903,404,2.147,405,2.147,505,2.97,506,2.97,507,2.97,508,2.97,509,5.113,510,2.97,511,2.97,512,2.97,513,2.97]],["title/entities/UserEntity.html",[128,1.806,406,1.245]],["body/entities/UserEntity.html",[3,0.319,4,0.319,5,0.271,16,0.616,24,1.709,25,0.033,28,0.9,31,1.483,32,0.723,55,0.546,66,0.319,67,0.018,79,0.024,80,0.024,84,1.123,105,1.319,113,3.026,114,3.026,128,2.728,130,1.452,150,3.371,370,2.247,373,3.047,375,3.047,379,3.047,382,3.543,405,1.905,406,1.452,407,2.105,411,2.345,514,3.047,515,3.658,516,3.658,517,3.658,518,3.658,519,3.658]],["title/controllers/V1Controller.html",[0,1.245,520,2.012]],["body/controllers/V1Controller.html",[0,0.617,2,0.617,3,0.136,4,0.136,5,0.115,7,0.997,9,1.977,13,2.115,15,1.62,16,0.202,17,1.095,18,2.476,19,2.115,24,1.402,25,0.034,27,2.959,28,0.739,30,1.977,31,1.287,32,0.593,33,1.526,34,1.198,36,2.356,37,3.365,39,3.449,43,1.828,44,1.828,55,0.525,56,0.402,57,0.997,58,0.566,59,0.674,60,0.674,61,0.895,66,0.136,67,0.008,68,2.792,69,0.895,71,1.977,79,0.013,80,0.013,97,2.163,101,3.961,102,2.105,105,1.193,108,3.608,110,2.163,112,2.105,118,1.003,120,3.885,141,1.454,176,2.105,226,2.105,233,0.895,237,2.356,241,1.454,248,1.828,250,3.961,251,1.828,253,1.198,256,0.997,266,1.316,274,1.828,275,1.62,283,2.377,294,1.296,328,3.062,330,3.062,428,2.105,520,1.62,521,1.296,522,1.556,523,1.556,524,1.556,525,3.675,526,1.556,527,1.556,528,2.527,529,2.527,530,1.556,531,2.527,532,1.556,533,2.527,534,1.556,535,1.556,536,1.556,537,1.556,538,2.527,539,1.556,540,1.556,541,1.556,542,2.527,543,1.556,544,1.556,545,1.556,546,2.527,547,2.527,548,1.556,549,1.556,550,1.556,551,3.192,552,1.556,553,1.556,554,1.556,555,1.556,556,1.556,557,1.556,558,1.556,559,1.556,560,1.556,561,1.556,562,1.556,563,1.556,564,1.556,565,1.556,566,2.527,567,1.556,568,1.556,569,1.556,570,1.556,571,1.556,572,1.556,573,1.556,574,1.556,575,1.556,576,1.556]],["title/modules/V1Module.html",[184,1.049,202,1.806]],["body/modules/V1Module.html",[2,1.885,3,0.32,4,0.32,5,0.272,25,0.033,31,1.035,55,0.664,56,0.949,58,1.336,66,0.32,67,0.018,79,0.024,80,0.024,118,1.456,184,1.761,186,1.59,187,1.59,188,1.911,189,1.911,190,1.59,191,2.743,192,1.911,197,2.474,198,1.911,201,2.112,202,3.401,205,1.59,220,3.057,222,3.057,233,2.112,254,2.654,266,3.078,311,2.654,394,2.654,395,3.435,491,3.057,492,3.057,493,3.057,494,3.057,495,3.057,520,3.376,577,3.057,578,3.057,579,3.67,580,3.67,581,3.67,582,3.67]],["title/coverage.html",[583,3.096]],["body/coverage.html",[0,2.089,1,2.039,5,0.236,6,2.649,23,1.508,25,0.033,32,0.413,60,1.378,62,1.656,67,0.029,79,0.022,80,0.022,81,2.089,83,2.649,97,1.508,100,2.3,110,1.508,128,1.83,131,1.83,190,1.378,231,2.039,232,2.649,253,1.508,266,1.656,267,2.649,283,1.656,309,1.83,313,2.649,318,1.508,323,2.649,359,1.508,361,2.649,370,1.508,371,2.649,384,2.649,399,3.124,406,2.089,408,2.649,413,1.83,414,2.3,415,2.649,421,2.649,424,2.039,425,2.649,462,2.649,496,2.649,502,2.649,514,2.649,520,2.039,521,2.649,583,2.3,584,2.649,585,3.18,586,3.18,587,4.32,588,4.32,589,6.235,590,5.503,591,5.263,592,3.18,593,3.18,594,4.32,595,3.18,596,3.18,597,3.18,598,3.18,599,2.649,600,3.18,601,3.18,602,3.18,603,3.18,604,3.18,605,3.18,606,3.18]],["title/dependencies.html",[187,1.635,607,2.184]],["body/dependencies.html",[25,0.033,56,1.084,58,1.526,59,1.816,79,0.027,80,0.027,121,2.687,127,1.816,130,1.663,187,1.816,403,2.687,474,3.492,608,5.601,609,4.191,610,4.191,611,4.191,612,4.191,613,4.191,614,4.191,615,4.191,616,4.191,617,4.191,618,4.191,619,4.191,620,4.191,621,4.191,622,4.191,623,4.191,624,4.191,625,4.191,626,4.191,627,4.191]],["title/miscellaneous/functions.html",[628,2.184,629,3.144]],["body/miscellaneous/functions.html",[16,0.632,25,0.029,79,0.029,80,0.029,190,2.585,599,4.052,628,4.052,629,4.052,630,4.864]],["title/index.html",[16,0.341,631,2.622,632,2.622]],["body/index.html",[9,1.329,25,0.032,79,0.022,80,0.022,93,1.966,118,2.057,174,2.555,175,4.318,583,2.218,584,2.555,633,3.067,634,3.067,635,4.815,636,3.067,637,3.067,638,3.067,639,3.067,640,3.067,641,3.067,642,4.214,643,3.067,644,3.067,645,4.815,646,3.067,647,3.067,648,3.067,649,3.067,650,3.067,651,4.815,652,5.751,653,3.067,654,5.751,655,3.067,656,3.067,657,3.067,658,4.214,659,3.067,660,3.067,661,3.067,662,4.815,663,3.067,664,4.214,665,3.067,666,3.067,667,3.067,668,3.067,669,3.067,670,3.067,671,3.067,672,3.067,673,5.184,674,4.214,675,3.067,676,4.214,677,3.067,678,3.511,679,3.067,680,3.067,681,3.067,682,3.067,683,3.067,684,3.067,685,4.815,686,3.067,687,3.067,688,3.067,689,4.214,690,3.067,691,3.067,692,3.067,693,4.815,694,3.067,695,3.067,696,3.067,697,3.067,698,3.067,699,3.067,700,3.067,701,3.067,702,3.067,703,3.067,704,3.067,705,3.067,706,3.067,707,3.067,708,4.214,709,3.067,710,3.067,711,3.067,712,2.555,713,3.067,714,3.067]],["title/modules.html",[186,1.854]],["body/modules.html",[25,0.028,79,0.028,80,0.028,185,2.892,186,1.954,195,2.596,196,2.596,202,2.596,205,1.954,678,5.106,715,6.129,716,6.129,717,6.129]],["title/overview.html",[718,3.566]],["body/overview.html",[2,1.406,25,0.032,62,2.697,79,0.024,80,0.024,82,2.038,118,1.406,184,1.184,185,3.752,186,1.534,187,1.534,188,1.845,189,1.845,190,1.534,191,1.845,192,1.845,193,2.951,194,2.951,195,3.522,196,3.432,197,2.418,198,1.845,202,3.162,205,2.621,253,2.455,266,2.697,304,2.951,305,2.951,306,2.951,318,2.828,360,1.534,390,2.951,392,2.951,407,2.038,483,2.951,484,2.951,485,2.951,577,2.951,578,2.951,718,2.951,719,3.542,720,5.178,721,3.542]],["title/properties.html",[84,0.894,607,2.184]],["body/properties.html",[9,2.08,25,0.032,79,0.029,80,0.029,84,1.137,712,4,722,4.802,723,4.802,724,4.802,725,4.802]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/BankServiceModule.html":{},"controllers/BankingController.html":{},"injectables/BankingGatewayService.html":{},"modules/BankingModule.html":{},"injectables/BankingService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/DataResponse.html":{},"modules/IdentityModule.html":{},"classes/LoginCredentials.html":{},"entities/LoginEntity.html":{},"entities/MessageLogEntity.html":{},"classes/MessageModel.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"modules/MessengerModule.html":{},"entities/StatementEntity.html":{},"classes/TransactionDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"controllers/V1Controller.html":{},"modules/V1Module.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":723,"title":{},"body":{"properties.html":{}}}],["0.2.0",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":627,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":601,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":596,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["1/5",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":593,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":605,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":615,"title":{},"body":{"dependencies.html":{}}}],["10.4.3",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["10000",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["11",{"_index":604,"title":{},"body":{"coverage.html":{}}}],["127.0.0.1",{"_index":581,"title":{},"body":{"modules/V1Module.html":{}}}],["14",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["2.28.2",{"_index":618,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["3.2.3",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":720,"title":{},"body":{"overview.html":{}}}],["4/7",{"_index":598,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":719,"title":{},"body":{"overview.html":{}}}],["5.1.7",{"_index":626,"title":{},"body":{"dependencies.html":{}}}],["5.10.1",{"_index":617,"title":{},"body":{"dependencies.html":{}}}],["57",{"_index":597,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["7",{"_index":721,"title":{},"body":{"overview.html":{}}}],["7.4.2",{"_index":614,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":603,"title":{},"body":{"coverage.html":{}}}],["8.13.0",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["87",{"_index":602,"title":{},"body":{"coverage.html":{}}}],["8888",{"_index":582,"title":{},"body":{"modules/V1Module.html":{}}}],["account",{"_index":13,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankingController.html":{},"injectables/BankingGatewayService.html":{},"controllers/MessagesController.html":{},"controllers/V1Controller.html":{}}}],["accountbalance",{"_index":236,"title":{},"body":{"controllers/BankingController.html":{},"injectables/BankingService.html":{}}}],["accountbalance$(@payload",{"_index":259,"title":{},"body":{"controllers/BankingController.html":{}}}],["accountbalance$(data",{"_index":239,"title":{},"body":{"controllers/BankingController.html":{}}}],["accountbalance$(token",{"_index":324,"title":{},"body":{"injectables/BankingService.html":{}}}],["acts",{"_index":10,"title":{},"body":{"controllers/AuthController.html":{}}}],["again",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["amount",{"_index":302,"title":{},"body":{"injectables/BankingGatewayService.html":{},"injectables/BankingService.html":{},"controllers/MessagesController.html":{},"entities/StatementEntity.html":{},"classes/TransactionDto.html":{}}}],["amount/:token",{"_index":525,"title":{},"body":{"controllers/V1Controller.html":{}}}],["apiproperty",{"_index":400,"title":{},"body":{"classes/LoginCredentials.html":{},"classes/TransactionDto.html":{},"classes/UserDto.html":{}}}],["application",{"_index":689,"title":{},"body":{"index.html":{}}}],["applications",{"_index":641,"title":{},"body":{"index.html":{}}}],["arsenide",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{}}}],["atmid",{"_index":354,"title":{},"body":{"injectables/BankingService.html":{},"entities/StatementEntity.html":{},"classes/TransactionDto.html":{}}}],["auth",{"_index":8,"title":{},"body":{"controllers/AuthController.html":{}}}],["authcontroller",{"_index":1,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/IdentityModule.html":{},"coverage.html":{}}}],["authentication",{"_index":14,"title":{},"body":{"controllers/AuthController.html":{}}}],["author",{"_index":725,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":62,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/IdentityModule.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":228,"title":{},"body":{"modules/BankServiceModule.html":{}}}],["balance",{"_index":241,"title":{},"body":{"controllers/BankingController.html":{},"injectables/BankingGatewayService.html":{},"injectables/BankingService.html":{},"controllers/MessagesController.html":{},"controllers/V1Controller.html":{}}}],["balance/:token",{"_index":529,"title":{},"body":{"controllers/V1Controller.html":{}}}],["ballance",{"_index":531,"title":{},"body":{"controllers/V1Controller.html":{}}}],["balres.data",{"_index":351,"title":{},"body":{"injectables/BankingService.html":{}}}],["banking",{"_index":233,"title":{},"body":{"controllers/BankingController.html":{},"injectables/BankingGatewayService.html":{},"modules/MessengerModule.html":{},"controllers/V1Controller.html":{},"modules/V1Module.html":{}}}],["banking/banking.module",{"_index":209,"title":{},"body":{"modules/BankServiceModule.html":{}}}],["bankingcontroller",{"_index":231,"title":{"controllers/BankingController.html":{}},"body":{"controllers/BankingController.html":{},"modules/BankingModule.html":{},"coverage.html":{}}}],["bankinggatewayservice",{"_index":266,"title":{"injectables/BankingGatewayService.html":{}},"body":{"injectables/BankingGatewayService.html":{},"controllers/V1Controller.html":{},"modules/V1Module.html":{},"coverage.html":{},"overview.html":{}}}],["bankingmodule",{"_index":195,"title":{"modules/BankingModule.html":{}},"body":{"modules/BankServiceModule.html":{},"modules/BankingModule.html":{},"modules.html":{},"overview.html":{}}}],["bankingservice",{"_index":253,"title":{"injectables/BankingService.html":{}},"body":{"controllers/BankingController.html":{},"modules/BankingModule.html":{},"injectables/BankingService.html":{},"controllers/V1Controller.html":{},"coverage.html":{},"overview.html":{}}}],["bankservicemodule",{"_index":185,"title":{"modules/BankServiceModule.html":{}},"body":{"modules/BankServiceModule.html":{},"modules.html":{},"overview.html":{}}}],["base.dto",{"_index":383,"title":{},"body":{"classes/BaseEntity.html":{}}}],["basedto",{"_index":359,"title":{"classes/BaseDto.html":{}},"body":{"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/LoginCredentials.html":{},"classes/MessageModel.html":{},"classes/UserDto.html":{},"coverage.html":{}}}],["basedto:3",{"_index":512,"title":{},"body":{"classes/UserDto.html":{}}}],["basedto:4",{"_index":510,"title":{},"body":{"classes/UserDto.html":{}}}],["basedto:5",{"_index":513,"title":{},"body":{"classes/UserDto.html":{}}}],["basedto:6",{"_index":511,"title":{},"body":{"classes/UserDto.html":{}}}],["baseentity",{"_index":370,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"entities/LoginEntity.html":{},"entities/MessageLogEntity.html":{},"entities/StatementEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["board",{"_index":711,"title":{},"body":{"index.html":{}}}],["body",{"_index":551,"title":{},"body":{"controllers/V1Controller.html":{}}}],["boolean",{"_index":387,"title":{},"body":{"classes/DataResponse.html":{}}}],["bootstrap",{"_index":190,"title":{},"body":{"modules/BankServiceModule.html":{},"modules/BankingModule.html":{},"modules/IdentityModule.html":{},"modules/MessengerModule.html":{},"modules/V1Module.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["broadcastmessage",{"_index":463,"title":{},"body":{"injectables/MessagesService.html":{}}}],["broadcastmessage$(userid",{"_index":468,"title":{},"body":{"injectables/MessagesService.html":{}}}],["browse",{"_index":717,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":715,"title":{},"body":{"modules.html":{}}}],["building",{"_index":636,"title":{},"body":{"index.html":{}}}],["channel",{"_index":680,"title":{},"body":{"index.html":{}}}],["check",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["class",{"_index":67,"title":{"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/DataResponse.html":{},"classes/LoginCredentials.html":{},"classes/MessageModel.html":{},"classes/TransactionDto.html":{},"classes/UserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/BankServiceModule.html":{},"controllers/BankingController.html":{},"injectables/BankingGatewayService.html":{},"modules/BankingModule.html":{},"injectables/BankingService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/DataResponse.html":{},"modules/IdentityModule.html":{},"classes/LoginCredentials.html":{},"entities/LoginEntity.html":{},"entities/MessageLogEntity.html":{},"classes/MessageModel.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"modules/MessengerModule.html":{},"entities/StatementEntity.html":{},"classes/TransactionDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"controllers/V1Controller.html":{},"modules/V1Module.html":{},"coverage.html":{}}}],["classes",{"_index":360,"title":{},"body":{"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/DataResponse.html":{},"classes/LoginCredentials.html":{},"classes/MessageModel.html":{},"classes/TransactionDto.html":{},"classes/UserDto.html":{},"overview.html":{}}}],["client",{"_index":465,"title":{},"body":{"injectables/MessagesService.html":{}}}],["clientproxy",{"_index":278,"title":{},"body":{"injectables/BankingGatewayService.html":{},"injectables/MessagesService.html":{}}}],["clientsmodule",{"_index":394,"title":{},"body":{"modules/IdentityModule.html":{},"modules/MessengerModule.html":{},"modules/V1Module.html":{}}}],["clientsmodule.register",{"_index":491,"title":{},"body":{"modules/MessengerModule.html":{},"modules/V1Module.html":{}}}],["cluster_bankingmodule",{"_index":304,"title":{},"body":{"modules/BankingModule.html":{},"overview.html":{}}}],["cluster_bankingmodule_imports",{"_index":305,"title":{},"body":{"modules/BankingModule.html":{},"overview.html":{}}}],["cluster_bankingmodule_providers",{"_index":306,"title":{},"body":{"modules/BankingModule.html":{},"overview.html":{}}}],["cluster_bankservicemodule",{"_index":193,"title":{},"body":{"modules/BankServiceModule.html":{},"overview.html":{}}}],["cluster_bankservicemodule_imports",{"_index":194,"title":{},"body":{"modules/BankServiceModule.html":{},"overview.html":{}}}],["cluster_identitymodule",{"_index":390,"title":{},"body":{"modules/IdentityModule.html":{},"overview.html":{}}}],["cluster_identitymodule_imports",{"_index":391,"title":{},"body":{"modules/IdentityModule.html":{}}}],["cluster_identitymodule_providers",{"_index":392,"title":{},"body":{"modules/IdentityModule.html":{},"overview.html":{}}}],["cluster_messengermodule",{"_index":483,"title":{},"body":{"modules/MessengerModule.html":{},"overview.html":{}}}],["cluster_messengermodule_exports",{"_index":484,"title":{},"body":{"modules/MessengerModule.html":{},"overview.html":{}}}],["cluster_messengermodule_providers",{"_index":485,"title":{},"body":{"modules/MessengerModule.html":{},"overview.html":{}}}],["cluster_v1module",{"_index":577,"title":{},"body":{"modules/V1Module.html":{},"overview.html":{}}}],["cluster_v1module_providers",{"_index":578,"title":{},"body":{"modules/V1Module.html":{},"overview.html":{}}}],["cmd",{"_index":416,"title":{},"body":{"entities/MessageLogEntity.html":{},"injectables/MessagesService.html":{}}}],["column",{"_index":382,"title":{},"body":{"classes/BaseEntity.html":{},"entities/LoginEntity.html":{},"entities/MessageLogEntity.html":{},"entities/StatementEntity.html":{},"entities/UserEntity.html":{}}}],["come",{"_index":670,"title":{},"body":{"index.html":{}}}],["configmodule",{"_index":208,"title":{},"body":{"modules/BankServiceModule.html":{},"modules/IdentityModule.html":{}}}],["configmodule.forroot",{"_index":211,"title":{},"body":{"modules/BankServiceModule.html":{}}}],["configservice",{"_index":91,"title":{},"body":{"injectables/AuthService.html":{},"modules/BankServiceModule.html":{}}}],["configservice.get('database_host",{"_index":221,"title":{},"body":{"modules/BankServiceModule.html":{}}}],["configservice.get('database_name",{"_index":227,"title":{},"body":{"modules/BankServiceModule.html":{}}}],["configservice.get('database_password",{"_index":225,"title":{},"body":{"modules/BankServiceModule.html":{}}}],["configservice.get('database_port",{"_index":223,"title":{},"body":{"modules/BankServiceModule.html":{}}}],["configservice.get('database_username",{"_index":224,"title":{},"body":{"modules/BankServiceModule.html":{}}}],["connection",{"_index":322,"title":{},"body":{"injectables/BankingService.html":{}}}],["console.log(configservice.get('salt",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor",{"_index":89,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BankingGatewayService.html":{},"injectables/BankingService.html":{},"injectables/MessagesService.html":{}}}],["constructor(@inject('banking",{"_index":295,"title":{},"body":{"injectables/BankingGatewayService.html":{}}}],["constructor(@injectrepository(messagelogentity",{"_index":476,"title":{},"body":{"injectables/MessagesService.html":{}}}],["constructor(banking",{"_index":277,"title":{},"body":{"injectables/BankingGatewayService.html":{}}}],["constructor(configservice",{"_index":90,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(messagelogrepository",{"_index":464,"title":{},"body":{"injectables/MessagesService.html":{}}}],["constructor(messageservice",{"_index":317,"title":{},"body":{"injectables/BankingService.html":{}}}],["constructor(private",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(public",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankingController.html":{},"injectables/BankingService.html":{},"controllers/MessagesController.html":{},"controllers/V1Controller.html":{}}}],["context",{"_index":430,"title":{},"body":{"controllers/MessagesController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AuthController.html":{},"controllers/BankingController.html":{},"controllers/MessagesController.html":{},"controllers/V1Controller.html":{}},"body":{"controllers/AuthController.html":{},"controllers/BankingController.html":{},"controllers/MessagesController.html":{},"controllers/V1Controller.html":{},"coverage.html":{}}}],["controller('auth",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('banking",{"_index":255,"title":{},"body":{"controllers/BankingController.html":{}}}],["controller('messages",{"_index":451,"title":{},"body":{"controllers/MessagesController.html":{}}}],["controller('v1/banking",{"_index":556,"title":{},"body":{"controllers/V1Controller.html":{}}}],["controller/auth.controller",{"_index":397,"title":{},"body":{"modules/IdentityModule.html":{}}}],["controller/messages.controller",{"_index":487,"title":{},"body":{"modules/MessengerModule.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankingController.html":{},"modules/BankingModule.html":{},"modules/IdentityModule.html":{},"controllers/MessagesController.html":{},"modules/MessengerModule.html":{},"controllers/V1Controller.html":{},"modules/V1Module.html":{},"overview.html":{}}}],["controllers/banking.controller",{"_index":308,"title":{},"body":{"modules/BankingModule.html":{}}}],["controllers/v1/v1.controller",{"_index":580,"title":{},"body":{"modules/V1Module.html":{}}}],["courses",{"_index":687,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":583,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["createaccount",{"_index":272,"title":{},"body":{"injectables/BankingGatewayService.html":{}}}],["createaccount$(user",{"_index":280,"title":{},"body":{"injectables/BankingGatewayService.html":{}}}],["created",{"_index":102,"title":{},"body":{"injectables/AuthService.html":{},"controllers/V1Controller.html":{}}}],["createdatecolumn",{"_index":373,"title":{},"body":{"classes/BaseEntity.html":{},"entities/UserEntity.html":{}}}],["createddate",{"_index":362,"title":{},"body":{"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"injectables/MessagesService.html":{},"classes/UserDto.html":{}}}],["creates",{"_index":99,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuser",{"_index":87,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuser$(user",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuserres",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["credentials",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"controllers/V1Controller.html":{}}}],["crypto",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{}}}],["crypto.pbkdf2sync(logincredentials.password",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["crypto.pbkdf2sync(queryres.password",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["crypto.pbkdf2sync(user.password",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["ctx",{"_index":449,"title":{},"body":{"controllers/MessagesController.html":{}}}],["data",{"_index":34,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankingController.html":{},"injectables/BankingService.html":{},"classes/DataResponse.html":{},"controllers/MessagesController.html":{},"controllers/V1Controller.html":{}}}],["data.payload",{"_index":263,"title":{},"body":{"controllers/BankingController.html":{}}}],["database",{"_index":226,"title":{},"body":{"modules/BankServiceModule.html":{},"controllers/V1Controller.html":{}}}],["dataresponse",{"_index":60,"title":{"classes/DataResponse.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankingService.html":{},"classes/DataResponse.html":{},"injectables/MessagesService.html":{},"controllers/V1Controller.html":{},"coverage.html":{}}}],["date",{"_index":365,"title":{},"body":{"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"injectables/MessagesService.html":{},"classes/UserDto.html":{}}}],["declarations",{"_index":189,"title":{},"body":{"modules/BankServiceModule.html":{},"modules/BankingModule.html":{},"modules/IdentityModule.html":{},"modules/MessengerModule.html":{},"modules/V1Module.html":{},"overview.html":{}}}],["decorators",{"_index":24,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankingController.html":{},"classes/BaseEntity.html":{},"classes/LoginCredentials.html":{},"entities/LoginEntity.html":{},"entities/MessageLogEntity.html":{},"controllers/MessagesController.html":{},"entities/StatementEntity.html":{},"classes/TransactionDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"controllers/V1Controller.html":{}}}],["deeper",{"_index":682,"title":{},"body":{"index.html":{}}}],["defined",{"_index":28,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankingController.html":{},"injectables/BankingGatewayService.html":{},"injectables/BankingService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/DataResponse.html":{},"classes/LoginCredentials.html":{},"entities/LoginEntity.html":{},"entities/MessageLogEntity.html":{},"classes/MessageModel.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"entities/StatementEntity.html":{},"classes/TransactionDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"controllers/V1Controller.html":{}}}],["delay",{"_index":553,"title":{},"body":{"controllers/V1Controller.html":{}}}],["deletedatecolumn",{"_index":375,"title":{},"body":{"classes/BaseEntity.html":{},"entities/UserEntity.html":{}}}],["deleteddate",{"_index":363,"title":{},"body":{"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/UserDto.html":{}}}],["delres.affected",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{}}}],["depaositamount",{"_index":427,"title":{},"body":{"controllers/MessagesController.html":{}}}],["depaositamount(@payload",{"_index":460,"title":{},"body":{"controllers/MessagesController.html":{}}}],["depaositamount(data",{"_index":429,"title":{},"body":{"controllers/MessagesController.html":{}}}],["dependencies",{"_index":187,"title":{"dependencies.html":{}},"body":{"modules/BankServiceModule.html":{},"modules/BankingModule.html":{},"modules/IdentityModule.html":{},"modules/MessengerModule.html":{},"modules/V1Module.html":{},"dependencies.html":{},"overview.html":{}}}],["deposit",{"_index":237,"title":{},"body":{"controllers/BankingController.html":{},"injectables/BankingService.html":{},"controllers/MessagesController.html":{},"controllers/V1Controller.html":{}}}],["deposit(@param('token",{"_index":572,"title":{},"body":{"controllers/V1Controller.html":{}}}],["deposit(@payload",{"_index":264,"title":{},"body":{"controllers/BankingController.html":{}}}],["deposit(data",{"_index":243,"title":{},"body":{"controllers/BankingController.html":{}}}],["deposit(token",{"_index":523,"title":{},"body":{"controllers/V1Controller.html":{}}}],["depositamount",{"_index":273,"title":{},"body":{"injectables/BankingGatewayService.html":{},"injectables/BankingService.html":{}}}],["depositamount$(token",{"_index":282,"title":{},"body":{"injectables/BankingGatewayService.html":{},"injectables/BankingService.html":{}}}],["description",{"_index":9,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankingController.html":{},"injectables/BankingGatewayService.html":{},"injectables/BankingService.html":{},"controllers/V1Controller.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":655,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":695,"title":{},"body":{"index.html":{}}}],["discord",{"_index":679,"title":{},"body":{"index.html":{}}}],["dive",{"_index":681,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":584,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["download",{"_index":647,"title":{},"body":{"index.html":{}}}],["e2e",{"_index":665,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":637,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":700,"title":{},"body":{"index.html":{}}}],["entities",{"_index":407,"title":{},"body":{"entities/LoginEntity.html":{},"entities/MessageLogEntity.html":{},"entities/StatementEntity.html":{},"entities/UserEntity.html":{},"overview.html":{}}}],["entities/login.entity",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{},"modules/IdentityModule.html":{}}}],["entities/message",{"_index":488,"title":{},"body":{"modules/MessengerModule.html":{}}}],["entities/statement.entity",{"_index":310,"title":{},"body":{"modules/BankingModule.html":{},"injectables/BankingService.html":{}}}],["entities/user.entity",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{},"modules/IdentityModule.html":{}}}],["entity",{"_index":406,"title":{"entities/LoginEntity.html":{},"entities/MessageLogEntity.html":{},"entities/StatementEntity.html":{},"entities/UserEntity.html":{}},"body":{"entities/LoginEntity.html":{},"entities/MessageLogEntity.html":{},"entities/StatementEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["entity('login",{"_index":412,"title":{},"body":{"entities/LoginEntity.html":{}}}],["entity('messagelog",{"_index":420,"title":{},"body":{"entities/MessageLogEntity.html":{}}}],["entity('statement",{"_index":501,"title":{},"body":{"entities/StatementEntity.html":{}}}],["entity('user",{"_index":519,"title":{},"body":{"entities/UserEntity.html":{}}}],["env",{"_index":214,"title":{},"body":{"modules/BankServiceModule.html":{}}}],["envfilepath",{"_index":212,"title":{},"body":{"modules/BankServiceModule.html":{}}}],["eventpattern",{"_index":448,"title":{},"body":{"controllers/MessagesController.html":{}}}],["example",{"_index":651,"title":{},"body":{"index.html":{}}}],["experience",{"_index":684,"title":{},"body":{"index.html":{}}}],["export",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/BankServiceModule.html":{},"controllers/BankingController.html":{},"injectables/BankingGatewayService.html":{},"modules/BankingModule.html":{},"injectables/BankingService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/DataResponse.html":{},"modules/IdentityModule.html":{},"classes/LoginCredentials.html":{},"entities/LoginEntity.html":{},"entities/MessageLogEntity.html":{},"classes/MessageModel.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"modules/MessengerModule.html":{},"entities/StatementEntity.html":{},"classes/TransactionDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"controllers/V1Controller.html":{},"modules/V1Module.html":{}}}],["exports",{"_index":192,"title":{},"body":{"modules/BankServiceModule.html":{},"modules/BankingModule.html":{},"modules/IdentityModule.html":{},"modules/MessengerModule.html":{},"modules/V1Module.html":{},"overview.html":{}}}],["express",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":405,"title":{},"body":{"classes/LoginCredentials.html":{},"entities/LoginEntity.html":{},"entities/MessageLogEntity.html":{},"entities/StatementEntity.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{}}}],["false",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["few",{"_index":668,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/BankServiceModule.html":{},"controllers/BankingController.html":{},"injectables/BankingGatewayService.html":{},"modules/BankingModule.html":{},"injectables/BankingService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/DataResponse.html":{},"modules/IdentityModule.html":{},"classes/LoginCredentials.html":{},"entities/LoginEntity.html":{},"entities/MessageLogEntity.html":{},"classes/MessageModel.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"modules/MessengerModule.html":{},"entities/StatementEntity.html":{},"classes/TransactionDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"controllers/V1Controller.html":{},"modules/V1Module.html":{},"coverage.html":{}}}],["follow",{"_index":704,"title":{},"body":{"index.html":{}}}],["framework",{"_index":635,"title":{},"body":{"index.html":{}}}],["from(this.loginrepository.delete",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(this.loginrepository.findone",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(this.loginrepository.save",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(this.statementrepository.findby",{"_index":343,"title":{},"body":{"injectables/BankingService.html":{}}}],["from(this.statementrepository.save",{"_index":353,"title":{},"body":{"injectables/BankingService.html":{}}}],["from(this.statementrepository.sum('amount",{"_index":347,"title":{},"body":{"injectables/BankingService.html":{}}}],["from(this.userrepository.findone",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(this.userrepository.save",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["full",{"_index":699,"title":{},"body":{"index.html":{}}}],["function",{"_index":600,"title":{},"body":{"coverage.html":{}}}],["functionality",{"_index":15,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankingController.html":{},"injectables/BankingGatewayService.html":{},"controllers/V1Controller.html":{}}}],["functions",{"_index":629,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":327,"title":{},"body":{"injectables/BankingService.html":{}}}],["get's",{"_index":328,"title":{},"body":{"injectables/BankingService.html":{},"controllers/V1Controller.html":{}}}],["get(\"/get",{"_index":566,"title":{},"body":{"controllers/V1Controller.html":{}}}],["get('/get",{"_index":528,"title":{},"body":{"controllers/V1Controller.html":{}}}],["getbalance",{"_index":274,"title":{},"body":{"injectables/BankingGatewayService.html":{},"controllers/MessagesController.html":{},"controllers/V1Controller.html":{}}}],["getbalance$(token",{"_index":285,"title":{},"body":{"injectables/BankingGatewayService.html":{}}}],["getbalance(@param('token",{"_index":569,"title":{},"body":{"controllers/V1Controller.html":{}}}],["getbalance(@payload",{"_index":459,"title":{},"body":{"controllers/MessagesController.html":{}}}],["getbalance(data",{"_index":434,"title":{},"body":{"controllers/MessagesController.html":{}}}],["getbalance(token",{"_index":527,"title":{},"body":{"controllers/V1Controller.html":{}}}],["getstatement",{"_index":275,"title":{},"body":{"injectables/BankingGatewayService.html":{},"injectables/BankingService.html":{},"controllers/MessagesController.html":{},"controllers/V1Controller.html":{}}}],["getstatement$(token",{"_index":287,"title":{},"body":{"injectables/BankingGatewayService.html":{},"injectables/BankingService.html":{}}}],["getstatement(@param('token",{"_index":567,"title":{},"body":{"controllers/V1Controller.html":{}}}],["getstatement(@payload",{"_index":458,"title":{},"body":{"controllers/MessagesController.html":{}}}],["getstatement(data",{"_index":436,"title":{},"body":{"controllers/MessagesController.html":{}}}],["getstatement(token",{"_index":532,"title":{},"body":{"controllers/V1Controller.html":{}}}],["getstatementres",{"_index":346,"title":{},"body":{"injectables/BankingService.html":{}}}],["getting",{"_index":631,"title":{"index.html":{}},"body":{}}],["getuserid",{"_index":88,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserid$(token",{"_index":104,"title":{},"body":{"injectables/AuthService.html":{}}}],["graph",{"_index":690,"title":{},"body":{"index.html":{}}}],["hands",{"_index":683,"title":{},"body":{"index.html":{}}}],["handy",{"_index":671,"title":{},"body":{"index.html":{}}}],["header",{"_index":469,"title":{},"body":{"injectables/MessagesService.html":{}}}],["help",{"_index":697,"title":{},"body":{"index.html":{}}}],["host",{"_index":220,"title":{},"body":{"modules/BankServiceModule.html":{},"modules/V1Module.html":{}}}],["id",{"_index":53,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankingService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/LoginCredentials.html":{},"classes/UserDto.html":{}}}],["identifier",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["identity/identity.module",{"_index":204,"title":{},"body":{"modules/BankServiceModule.html":{}}}],["identity/models/user.model",{"_index":554,"title":{},"body":{"controllers/V1Controller.html":{}}}],["identitymodule",{"_index":196,"title":{"modules/IdentityModule.html":{}},"body":{"modules/BankServiceModule.html":{},"modules/IdentityModule.html":{},"modules.html":{},"overview.html":{}}}],["implements",{"_index":372,"title":{},"body":{"classes/BaseEntity.html":{}}}],["import",{"_index":55,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/BankServiceModule.html":{},"controllers/BankingController.html":{},"injectables/BankingGatewayService.html":{},"modules/BankingModule.html":{},"injectables/BankingService.html":{},"classes/BaseEntity.html":{},"modules/IdentityModule.html":{},"classes/LoginCredentials.html":{},"entities/LoginEntity.html":{},"entities/MessageLogEntity.html":{},"classes/MessageModel.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"modules/MessengerModule.html":{},"entities/StatementEntity.html":{},"classes/TransactionDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"controllers/V1Controller.html":{},"modules/V1Module.html":{}}}],["imports",{"_index":201,"title":{},"body":{"modules/BankServiceModule.html":{},"modules/BankingModule.html":{},"modules/IdentityModule.html":{},"modules/MessengerModule.html":{},"modules/V1Module.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankingController.html":{},"injectables/BankingGatewayService.html":{},"injectables/BankingService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/DataResponse.html":{},"classes/LoginCredentials.html":{},"entities/LoginEntity.html":{},"entities/MessageLogEntity.html":{},"classes/MessageModel.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"entities/StatementEntity.html":{},"classes/TransactionDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"controllers/V1Controller.html":{},"miscellaneous/functions.html":{}}}],["index()@primarygeneratedcolumn",{"_index":377,"title":{},"body":{"classes/BaseEntity.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/BankServiceModule.html":{},"controllers/BankingController.html":{},"injectables/BankingGatewayService.html":{},"modules/BankingModule.html":{},"injectables/BankingService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/DataResponse.html":{},"modules/IdentityModule.html":{},"classes/LoginCredentials.html":{},"entities/LoginEntity.html":{},"entities/MessageLogEntity.html":{},"classes/MessageModel.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"modules/MessengerModule.html":{},"entities/StatementEntity.html":{},"classes/TransactionDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"controllers/V1Controller.html":{},"modules/V1Module.html":{}}}],["information",{"_index":101,"title":{},"body":{"injectables/AuthService.html":{},"controllers/V1Controller.html":{}}}],["inherited",{"_index":509,"title":{},"body":{"classes/UserDto.html":{}}}],["inject",{"_index":217,"title":{},"body":{"modules/BankServiceModule.html":{},"injectables/BankingGatewayService.html":{},"injectables/MessagesService.html":{}}}],["inject('banking",{"_index":477,"title":{},"body":{"injectables/MessagesService.html":{}}}],["injectable",{"_index":81,"title":{"injectables/AuthService.html":{},"injectables/BankingGatewayService.html":{},"injectables/BankingService.html":{},"injectables/MessagesService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/BankingGatewayService.html":{},"injectables/BankingService.html":{},"injectables/MessagesService.html":{},"coverage.html":{}}}],["injectables",{"_index":82,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BankingGatewayService.html":{},"injectables/BankingService.html":{},"injectables/MessagesService.html":{},"overview.html":{}}}],["injectrepository",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BankingService.html":{},"injectables/MessagesService.html":{}}}],["injectrepository(loginentity",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectrepository(statemententity",{"_index":338,"title":{},"body":{"injectables/BankingService.html":{}}}],["injectrepository(userentity",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{}}}],["install",{"_index":648,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":653,"title":{},"body":{"index.html":{}}}],["interact",{"_index":691,"title":{},"body":{"index.html":{}}}],["iserror",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BankingService.html":{},"classes/DataResponse.html":{}}}],["isglobal",{"_index":215,"title":{},"body":{"modules/BankServiceModule.html":{}}}],["job",{"_index":708,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":710,"title":{},"body":{"index.html":{}}}],["json.stringify(payload",{"_index":480,"title":{},"body":{"injectables/MessagesService.html":{}}}],["learn",{"_index":675,"title":{},"body":{"index.html":{}}}],["legend",{"_index":188,"title":{},"body":{"modules/BankServiceModule.html":{},"modules/BankingModule.html":{},"modules/IdentityModule.html":{},"modules/MessengerModule.html":{},"modules/V1Module.html":{},"overview.html":{}}}],["license",{"_index":712,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":714,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":706,"title":{},"body":{"index.html":{}}}],["log's",{"_index":112,"title":{},"body":{"injectables/AuthService.html":{},"controllers/V1Controller.html":{}}}],["log.entity",{"_index":475,"title":{},"body":{"injectables/MessagesService.html":{},"modules/MessengerModule.html":{}}}],["log.entity.ts",{"_index":415,"title":{},"body":{"entities/MessageLogEntity.html":{},"coverage.html":{}}}],["log.entity.ts:11",{"_index":418,"title":{},"body":{"entities/MessageLogEntity.html":{}}}],["log.entity.ts:14",{"_index":417,"title":{},"body":{"entities/MessageLogEntity.html":{}}}],["log.entity.ts:8",{"_index":419,"title":{},"body":{"entities/MessageLogEntity.html":{}}}],["logged",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["logging",{"_index":229,"title":{},"body":{"modules/BankServiceModule.html":{}}}],["login",{"_index":18,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankingGatewayService.html":{},"injectables/BankingService.html":{},"controllers/MessagesController.html":{},"controllers/V1Controller.html":{}}}],["login$(@payload",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{}}}],["login$(data",{"_index":22,"title":{},"body":{"controllers/AuthController.html":{}}}],["login$(logincredentials",{"_index":109,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BankingGatewayService.html":{}}}],["login(@body",{"_index":561,"title":{},"body":{"controllers/V1Controller.html":{}}}],["login(@payload",{"_index":454,"title":{},"body":{"controllers/MessagesController.html":{}}}],["login(data",{"_index":438,"title":{},"body":{"controllers/MessagesController.html":{}}}],["login(logincredentials",{"_index":535,"title":{},"body":{"controllers/V1Controller.html":{}}}],["logincredentials",{"_index":110,"title":{"classes/LoginCredentials.html":{}},"body":{"injectables/AuthService.html":{},"injectables/BankingGatewayService.html":{},"classes/LoginCredentials.html":{},"classes/UserDto.html":{},"controllers/V1Controller.html":{},"coverage.html":{}}}],["logincredentials.username",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginentity",{"_index":131,"title":{"entities/LoginEntity.html":{}},"body":{"injectables/AuthService.html":{},"modules/IdentityModule.html":{},"entities/LoginEntity.html":{},"coverage.html":{}}}],["loginrepository",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{}}}],["logintoken",{"_index":119,"title":{},"body":{"injectables/AuthService.html":{},"entities/LoginEntity.html":{}}}],["logout",{"_index":19,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankingGatewayService.html":{},"controllers/MessagesController.html":{},"controllers/V1Controller.html":{}}}],["logout$(@payload",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout$(data",{"_index":40,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout$(logintoken",{"_index":115,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout$(token",{"_index":290,"title":{},"body":{"injectables/BankingGatewayService.html":{}}}],["logout(@param('token",{"_index":564,"title":{},"body":{"controllers/V1Controller.html":{}}}],["logout(@payload",{"_index":456,"title":{},"body":{"controllers/MessagesController.html":{}}}],["logout(data",{"_index":440,"title":{},"body":{"controllers/MessagesController.html":{}}}],["logout(token",{"_index":539,"title":{},"body":{"controllers/V1Controller.html":{}}}],["logs",{"_index":117,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":707,"title":{},"body":{"index.html":{}}}],["loop",{"_index":702,"title":{},"body":{"index.html":{}}}],["map",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BankingService.html":{}}}],["matching",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/BankServiceModule.html":{},"controllers/BankingController.html":{},"injectables/BankingGatewayService.html":{},"modules/BankingModule.html":{},"injectables/BankingService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/DataResponse.html":{},"modules/IdentityModule.html":{},"classes/LoginCredentials.html":{},"entities/LoginEntity.html":{},"entities/MessageLogEntity.html":{},"classes/MessageModel.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"modules/MessengerModule.html":{},"entities/StatementEntity.html":{},"classes/TransactionDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"controllers/V1Controller.html":{},"modules/V1Module.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["message",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BankingGatewayService.html":{},"injectables/BankingService.html":{},"classes/DataResponse.html":{},"controllers/V1Controller.html":{}}}],["messagelogentity",{"_index":413,"title":{"entities/MessageLogEntity.html":{}},"body":{"entities/MessageLogEntity.html":{},"injectables/MessagesService.html":{},"modules/MessengerModule.html":{},"coverage.html":{}}}],["messagelogrepository",{"_index":467,"title":{},"body":{"injectables/MessagesService.html":{}}}],["messagemodel",{"_index":23,"title":{"classes/MessageModel.html":{}},"body":{"controllers/AuthController.html":{},"controllers/BankingController.html":{},"classes/MessageModel.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"coverage.html":{}}}],["messagepattern",{"_index":57,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankingController.html":{},"controllers/MessagesController.html":{},"controllers/V1Controller.html":{}}}],["messagepattern('account",{"_index":240,"title":{},"body":{"controllers/BankingController.html":{}}}],["messagepattern('create",{"_index":443,"title":{},"body":{"controllers/MessagesController.html":{}}}],["messagepattern('deposit",{"_index":432,"title":{},"body":{"controllers/MessagesController.html":{}}}],["messagepattern('get",{"_index":52,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MessagesController.html":{}}}],["messagepattern('login",{"_index":26,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MessagesController.html":{}}}],["messagepattern('logout",{"_index":41,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MessagesController.html":{}}}],["messagepattern('new",{"_index":47,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagepattern('withdraw",{"_index":446,"title":{},"body":{"controllers/MessagesController.html":{}}}],["messages",{"_index":426,"title":{},"body":{"controllers/MessagesController.html":{}}}],["messagescontroller",{"_index":424,"title":{"controllers/MessagesController.html":{}},"body":{"controllers/MessagesController.html":{},"modules/MessengerModule.html":{},"coverage.html":{}}}],["messageservice",{"_index":315,"title":{},"body":{"injectables/BankingService.html":{}}}],["messagesservice",{"_index":318,"title":{"injectables/MessagesService.html":{}},"body":{"injectables/BankingService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"modules/MessengerModule.html":{},"coverage.html":{},"overview.html":{}}}],["messaging",{"_index":321,"title":{},"body":{"injectables/BankingService.html":{},"controllers/MessagesController.html":{}}}],["messagingservice",{"_index":452,"title":{},"body":{"controllers/MessagesController.html":{}}}],["messenger/messenger.module",{"_index":206,"title":{},"body":{"modules/BankServiceModule.html":{}}}],["messengermodule",{"_index":205,"title":{"modules/MessengerModule.html":{}},"body":{"modules/BankServiceModule.html":{},"modules/BankingModule.html":{},"modules/IdentityModule.html":{},"modules/MessengerModule.html":{},"modules/V1Module.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":17,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankingController.html":{},"injectables/BankingGatewayService.html":{},"injectables/BankingService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"controllers/V1Controller.html":{}}}],["miscellaneous",{"_index":628,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":713,"title":{},"body":{"index.html":{}}}],["mode",{"_index":658,"title":{},"body":{"index.html":{}}}],["models/banking",{"_index":336,"title":{},"body":{"injectables/BankingService.html":{}}}],["models/message.model",{"_index":450,"title":{},"body":{"controllers/MessagesController.html":{}}}],["modifieddate",{"_index":364,"title":{},"body":{"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/UserDto.html":{}}}],["module",{"_index":184,"title":{"modules/BankServiceModule.html":{},"modules/BankingModule.html":{},"modules/IdentityModule.html":{},"modules/MessengerModule.html":{},"modules/V1Module.html":{}},"body":{"modules/BankServiceModule.html":{},"modules/BankingModule.html":{},"modules/IdentityModule.html":{},"modules/MessengerModule.html":{},"modules/V1Module.html":{},"overview.html":{}}}],["modules",{"_index":186,"title":{"modules.html":{}},"body":{"modules/BankServiceModule.html":{},"modules/BankingModule.html":{},"modules/IdentityModule.html":{},"modules/MessengerModule.html":{},"modules/V1Module.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":676,"title":{},"body":{"index.html":{}}}],["mq",{"_index":235,"title":{},"body":{"controllers/BankingController.html":{},"injectables/BankingGatewayService.html":{}}}],["mqtt",{"_index":616,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":31,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankingController.html":{},"injectables/BankingGatewayService.html":{},"injectables/BankingService.html":{},"classes/LoginCredentials.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"modules/MessengerModule.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"controllers/V1Controller.html":{},"modules/V1Module.html":{}}}],["nats",{"_index":474,"title":{},"body":{"injectables/MessagesService.html":{},"dependencies.html":{}}}],["nats://localhost:4222",{"_index":495,"title":{},"body":{"modules/MessengerModule.html":{},"modules/V1Module.html":{}}}],["natscontext",{"_index":431,"title":{},"body":{"controllers/MessagesController.html":{}}}],["natt",{"_index":649,"title":{},"body":{"index.html":{}}}],["need",{"_index":696,"title":{},"body":{"index.html":{}}}],["nest",{"_index":642,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":673,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":56,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/BankServiceModule.html":{},"controllers/BankingController.html":{},"injectables/BankingGatewayService.html":{},"modules/BankingModule.html":{},"injectables/BankingService.html":{},"modules/IdentityModule.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"modules/MessengerModule.html":{},"controllers/V1Controller.html":{},"modules/V1Module.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{},"modules/BankServiceModule.html":{},"modules/IdentityModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["nestjs/microservices",{"_index":58,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankingController.html":{},"injectables/BankingGatewayService.html":{},"modules/IdentityModule.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"modules/MessengerModule.html":{},"controllers/V1Controller.html":{},"modules/V1Module.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":403,"title":{},"body":{"classes/LoginCredentials.html":{},"classes/TransactionDto.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{},"modules/BankServiceModule.html":{},"modules/BankingModule.html":{},"injectables/BankingService.html":{},"modules/IdentityModule.html":{},"injectables/MessagesService.html":{},"modules/MessengerModule.html":{},"dependencies.html":{}}}],["new",{"_index":100,"title":{},"body":{"injectables/AuthService.html":{},"controllers/MessagesController.html":{},"coverage.html":{}}}],["newaccount",{"_index":428,"title":{},"body":{"controllers/MessagesController.html":{},"controllers/V1Controller.html":{}}}],["newaccount(@body",{"_index":558,"title":{},"body":{"controllers/V1Controller.html":{}}}],["newaccount(@payload",{"_index":457,"title":{},"body":{"controllers/MessagesController.html":{}}}],["newaccount(data",{"_index":442,"title":{},"body":{"controllers/MessagesController.html":{}}}],["newaccount(userdto",{"_index":543,"title":{},"body":{"controllers/V1Controller.html":{}}}],["newuser",{"_index":20,"title":{},"body":{"controllers/AuthController.html":{}}}],["newuser$(@payload",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{}}}],["newuser$(data",{"_index":46,"title":{},"body":{"controllers/AuthController.html":{}}}],["node.js",{"_index":634,"title":{},"body":{"index.html":{}}}],["npm",{"_index":652,"title":{},"body":{"index.html":{}}}],["null",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BankingService.html":{}}}],["number",{"_index":497,"title":{},"body":{"entities/StatementEntity.html":{},"classes/TransactionDto.html":{}}}],["observable",{"_index":37,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankingController.html":{},"injectables/BankingService.html":{},"controllers/V1Controller.html":{}}}],["of(useridres",{"_index":342,"title":{},"body":{"injectables/BankingService.html":{}}}],["offer",{"_index":709,"title":{},"body":{"index.html":{}}}],["official",{"_index":685,"title":{},"body":{"index.html":{}}}],["optional",{"_index":33,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankingController.html":{},"injectables/BankingGatewayService.html":{},"injectables/BankingService.html":{},"classes/BaseDto.html":{},"classes/DataResponse.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"classes/UserDto.html":{},"controllers/V1Controller.html":{}}}],["options",{"_index":493,"title":{},"body":{"modules/MessengerModule.html":{},"modules/V1Module.html":{}}}],["out",{"_index":118,"title":{},"body":{"injectables/AuthService.html":{},"modules/BankServiceModule.html":{},"modules/BankingModule.html":{},"modules/IdentityModule.html":{},"modules/MessengerModule.html":{},"controllers/V1Controller.html":{},"modules/V1Module.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":718,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":607,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankingController.html":{},"injectables/BankingService.html":{},"controllers/MessagesController.html":{},"controllers/V1Controller.html":{}}}],["parameters",{"_index":30,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankingController.html":{},"injectables/BankingGatewayService.html":{},"injectables/BankingService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"controllers/V1Controller.html":{}}}],["part",{"_index":698,"title":{},"body":{"index.html":{}}}],["password",{"_index":114,"title":{},"body":{"injectables/AuthService.html":{},"modules/BankServiceModule.html":{},"classes/LoginCredentials.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{}}}],["path",{"_index":210,"title":{},"body":{"modules/BankServiceModule.html":{}}}],["path.resolve(__dirname",{"_index":213,"title":{},"body":{"modules/BankServiceModule.html":{}}}],["payload",{"_index":35,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankingController.html":{},"injectables/BankingGatewayService.html":{},"entities/MessageLogEntity.html":{},"classes/MessageModel.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{}}}],["payloadtype",{"_index":470,"title":{},"body":{"injectables/MessagesService.html":{}}}],["perform",{"_index":269,"title":{},"body":{"injectables/BankingGatewayService.html":{}}}],["perform's",{"_index":538,"title":{},"body":{"controllers/V1Controller.html":{}}}],["performs",{"_index":330,"title":{},"body":{"injectables/BankingService.html":{},"controllers/V1Controller.html":{}}}],["pg",{"_index":619,"title":{},"body":{"dependencies.html":{}}}],["pipe(map((createuserres",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["pipe(map((getstatementres",{"_index":345,"title":{},"body":{"injectables/BankingService.html":{}}}],["pipe(map((res",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["pipe(map((useridres",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["pipe(map(sumres",{"_index":348,"title":{},"body":{"injectables/BankingService.html":{}}}],["pipe(rxjs.switchmap(result",{"_index":481,"title":{},"body":{"injectables/MessagesService.html":{}}}],["pipe(switchmap((delres",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{}}}],["pipe(switchmap((depositres",{"_index":357,"title":{},"body":{"injectables/BankingService.html":{}}}],["pipe(switchmap((queryres",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["pipe(switchmap((useridres",{"_index":340,"title":{},"body":{"injectables/BankingService.html":{}}}],["please",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["port",{"_index":222,"title":{},"body":{"modules/BankServiceModule.html":{},"modules/V1Module.html":{}}}],["post",{"_index":552,"title":{},"body":{"controllers/V1Controller.html":{}}}],["post(\"/deposit",{"_index":571,"title":{},"body":{"controllers/V1Controller.html":{}}}],["post(\"/login",{"_index":560,"title":{},"body":{"controllers/V1Controller.html":{}}}],["post(\"/logout/:token",{"_index":563,"title":{},"body":{"controllers/V1Controller.html":{}}}],["post(\"/new",{"_index":557,"title":{},"body":{"controllers/V1Controller.html":{}}}],["post(\"/withdraw",{"_index":574,"title":{},"body":{"controllers/V1Controller.html":{}}}],["post('/deposit",{"_index":524,"title":{},"body":{"controllers/V1Controller.html":{}}}],["post('/login",{"_index":536,"title":{},"body":{"controllers/V1Controller.html":{}}}],["post('/logout/:token",{"_index":540,"title":{},"body":{"controllers/V1Controller.html":{}}}],["post('/new",{"_index":544,"title":{},"body":{"controllers/V1Controller.html":{}}}],["post('/withdraw",{"_index":549,"title":{},"body":{"controllers/V1Controller.html":{}}}],["postgres",{"_index":219,"title":{},"body":{"modules/BankServiceModule.html":{}}}],["postgresql",{"_index":650,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":7,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankingController.html":{},"controllers/MessagesController.html":{},"controllers/V1Controller.html":{}}}],["primarygeneratedcolumn",{"_index":381,"title":{},"body":{"classes/BaseEntity.html":{}}}],["private",{"_index":85,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BankingGatewayService.html":{},"injectables/BankingService.html":{},"injectables/MessagesService.html":{}}}],["process",{"_index":252,"title":{},"body":{"controllers/BankingController.html":{}}}],["production",{"_index":660,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":633,"title":{},"body":{"index.html":{}}}],["project",{"_index":645,"title":{},"body":{"index.html":{}}}],["properties",{"_index":84,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"injectables/BankingService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/DataResponse.html":{},"classes/LoginCredentials.html":{},"entities/LoginEntity.html":{},"entities/MessageLogEntity.html":{},"classes/MessageModel.html":{},"entities/StatementEntity.html":{},"classes/TransactionDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"properties.html":{}}}],["providers",{"_index":191,"title":{},"body":{"modules/BankServiceModule.html":{},"modules/BankingModule.html":{},"modules/IdentityModule.html":{},"modules/MessengerModule.html":{},"modules/V1Module.html":{},"overview.html":{}}}],["pub",{"_index":11,"title":{},"body":{"controllers/AuthController.html":{}}}],["public",{"_index":314,"title":{},"body":{"injectables/BankingService.html":{},"classes/BaseDto.html":{},"classes/DataResponse.html":{},"classes/LoginCredentials.html":{},"classes/MessageModel.html":{},"classes/TransactionDto.html":{},"classes/UserDto.html":{}}}],["publish's",{"_index":268,"title":{},"body":{"injectables/BankingGatewayService.html":{}}}],["publisher",{"_index":50,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankingController.html":{}}}],["publishes",{"_index":38,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankingController.html":{},"injectables/BankingService.html":{}}}],["pubsub",{"_index":234,"title":{},"body":{"controllers/BankingController.html":{}}}],["queryres",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["queryres.id",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["questions",{"_index":677,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":296,"title":{},"body":{"injectables/BankingGatewayService.html":{}}}],["real",{"_index":692,"title":{},"body":{"index.html":{}}}],["record",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["reflect",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["releases",{"_index":45,"title":{},"body":{"controllers/AuthController.html":{}}}],["repository",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BankingService.html":{},"injectables/MessagesService.html":{},"index.html":{}}}],["request",{"_index":107,"title":{},"body":{"injectables/AuthService.html":{}}}],["res.logintoken",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset",{"_index":198,"title":{},"body":{"modules/BankServiceModule.html":{},"modules/BankingModule.html":{},"modules/IdentityModule.html":{},"modules/MessengerModule.html":{},"modules/V1Module.html":{},"overview.html":{}}}],["resources",{"_index":669,"title":{},"body":{"index.html":{}}}],["response",{"_index":43,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/V1Controller.html":{}}}],["responsetype",{"_index":472,"title":{},"body":{"injectables/MessagesService.html":{}}}],["result",{"_index":250,"title":{},"body":{"controllers/BankingController.html":{},"controllers/V1Controller.html":{}}}],["results",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/BankServiceModule.html":{},"controllers/BankingController.html":{},"injectables/BankingGatewayService.html":{},"modules/BankingModule.html":{},"injectables/BankingService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/DataResponse.html":{},"modules/IdentityModule.html":{},"classes/LoginCredentials.html":{},"entities/LoginEntity.html":{},"entities/MessageLogEntity.html":{},"classes/MessageModel.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"modules/MessengerModule.html":{},"entities/StatementEntity.html":{},"classes/TransactionDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"controllers/V1Controller.html":{},"modules/V1Module.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["retrieve",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["return",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankingController.html":{},"injectables/BankingGatewayService.html":{},"injectables/BankingService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"controllers/V1Controller.html":{}}}],["returns",{"_index":36,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankingController.html":{},"injectables/BankingGatewayService.html":{},"injectables/BankingService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"controllers/V1Controller.html":{}}}],["run",{"_index":654,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":59,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankingController.html":{},"injectables/BankingService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"controllers/V1Controller.html":{},"dependencies.html":{}}}],["rxjs.from",{"_index":478,"title":{},"body":{"injectables/MessagesService.html":{}}}],["rxjs.observable",{"_index":473,"title":{},"body":{"injectables/MessagesService.html":{}}}],["salt",{"_index":86,"title":{},"body":{"injectables/AuthService.html":{}}}],["saveres",{"_index":352,"title":{},"body":{"injectables/BankingService.html":{}}}],["scalable",{"_index":638,"title":{},"body":{"index.html":{}}}],["server",{"_index":639,"title":{},"body":{"index.html":{}}}],["servers",{"_index":494,"title":{},"body":{"modules/MessengerModule.html":{},"modules/V1Module.html":{}}}],["service",{"_index":256,"title":{},"body":{"controllers/BankingController.html":{},"injectables/BankingService.html":{},"controllers/MessagesController.html":{},"controllers/V1Controller.html":{}}}],["service.module.ts",{"_index":200,"title":{},"body":{"modules/BankServiceModule.html":{}}}],["services/auth.service",{"_index":396,"title":{},"body":{"modules/IdentityModule.html":{}}}],["services/banking.service",{"_index":254,"title":{},"body":{"controllers/BankingController.html":{},"modules/BankingModule.html":{},"modules/V1Module.html":{}}}],["services/messages.service",{"_index":489,"title":{},"body":{"modules/MessengerModule.html":{}}}],["setup",{"_index":646,"title":{},"body":{"index.html":{}}}],["sha512').tostring('hex",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["side",{"_index":640,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/BankServiceModule.html":{},"controllers/BankingController.html":{},"injectables/BankingGatewayService.html":{},"modules/BankingModule.html":{},"injectables/BankingService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/DataResponse.html":{},"modules/IdentityModule.html":{},"classes/LoginCredentials.html":{},"entities/LoginEntity.html":{},"entities/MessageLogEntity.html":{},"classes/MessageModel.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"modules/MessengerModule.html":{},"entities/StatementEntity.html":{},"classes/TransactionDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"controllers/V1Controller.html":{},"modules/V1Module.html":{}}}],["specific",{"_index":270,"title":{},"body":{"injectables/BankingGatewayService.html":{}}}],["sqlite3",{"_index":625,"title":{},"body":{"dependencies.html":{}}}],["src/.../main.ts",{"_index":630,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/bank",{"_index":199,"title":{},"body":{"modules/BankServiceModule.html":{}}}],["src/banking/banking.module.ts",{"_index":307,"title":{},"body":{"modules/BankingModule.html":{}}}],["src/banking/controllers/banking.controller.ts",{"_index":232,"title":{},"body":{"controllers/BankingController.html":{},"coverage.html":{}}}],["src/banking/controllers/banking.controller.ts:24",{"_index":246,"title":{},"body":{"controllers/BankingController.html":{}}}],["src/banking/controllers/banking.controller.ts:34",{"_index":242,"title":{},"body":{"controllers/BankingController.html":{}}}],["src/banking/controllers/banking.controller.ts:44",{"_index":249,"title":{},"body":{"controllers/BankingController.html":{}}}],["src/banking/controllers/banking.controller.ts:55",{"_index":244,"title":{},"body":{"controllers/BankingController.html":{}}}],["src/banking/entities/statement.entity.ts",{"_index":496,"title":{},"body":{"entities/StatementEntity.html":{},"coverage.html":{}}}],["src/banking/entities/statement.entity.ts:11",{"_index":499,"title":{},"body":{"entities/StatementEntity.html":{}}}],["src/banking/entities/statement.entity.ts:14",{"_index":498,"title":{},"body":{"entities/StatementEntity.html":{}}}],["src/banking/entities/statement.entity.ts:8",{"_index":500,"title":{},"body":{"entities/StatementEntity.html":{}}}],["src/banking/models/banking",{"_index":294,"title":{},"body":{"injectables/BankingGatewayService.html":{},"controllers/V1Controller.html":{}}}],["src/banking/models/banking.ts",{"_index":502,"title":{},"body":{"classes/TransactionDto.html":{},"coverage.html":{}}}],["src/banking/models/banking.ts:4",{"_index":503,"title":{},"body":{"classes/TransactionDto.html":{}}}],["src/banking/models/banking.ts:5",{"_index":504,"title":{},"body":{"classes/TransactionDto.html":{}}}],["src/banking/services/banking.service.ts",{"_index":313,"title":{},"body":{"injectables/BankingService.html":{},"coverage.html":{}}}],["src/banking/services/banking.service.ts:11",{"_index":320,"title":{},"body":{"injectables/BankingService.html":{}}}],["src/banking/services/banking.service.ts:17",{"_index":334,"title":{},"body":{"injectables/BankingService.html":{}}}],["src/banking/services/banking.service.ts:24",{"_index":331,"title":{},"body":{"injectables/BankingService.html":{}}}],["src/banking/services/banking.service.ts:40",{"_index":325,"title":{},"body":{"injectables/BankingService.html":{}}}],["src/banking/services/banking.service.ts:56",{"_index":333,"title":{},"body":{"injectables/BankingService.html":{}}}],["src/banking/services/banking.service.ts:80",{"_index":329,"title":{},"body":{"injectables/BankingService.html":{}}}],["src/base/base.dto",{"_index":404,"title":{},"body":{"classes/LoginCredentials.html":{},"classes/MessageModel.html":{},"classes/UserDto.html":{}}}],["src/base/base.dto.ts",{"_index":361,"title":{},"body":{"classes/BaseDto.html":{},"coverage.html":{}}}],["src/base/base.dto.ts:3",{"_index":368,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/base/base.dto.ts:4",{"_index":366,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/base/base.dto.ts:5",{"_index":369,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/base/base.dto.ts:6",{"_index":367,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/base/base.entity",{"_index":411,"title":{},"body":{"entities/LoginEntity.html":{},"entities/MessageLogEntity.html":{},"entities/StatementEntity.html":{},"entities/UserEntity.html":{}}}],["src/base/base.entity.ts",{"_index":371,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["src/base/base.entity.ts:11",{"_index":374,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/base/base.entity.ts:14",{"_index":380,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/base/base.entity.ts:17",{"_index":376,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/base/base.entity.ts:8",{"_index":378,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/base/response",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankingService.html":{},"injectables/MessagesService.html":{},"controllers/V1Controller.html":{}}}],["src/base/response.ts",{"_index":384,"title":{},"body":{"classes/DataResponse.html":{},"coverage.html":{}}}],["src/base/response.ts:2",{"_index":388,"title":{},"body":{"classes/DataResponse.html":{}}}],["src/base/response.ts:3",{"_index":386,"title":{},"body":{"classes/DataResponse.html":{}}}],["src/base/response.ts:4",{"_index":389,"title":{},"body":{"classes/DataResponse.html":{}}}],["src/identity/controller/auth.controller.ts",{"_index":6,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/identity/controller/auth.controller.ts:26",{"_index":29,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/identity/controller/auth.controller.ts:36",{"_index":54,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/identity/controller/auth.controller.ts:47",{"_index":42,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/identity/controller/auth.controller.ts:58",{"_index":48,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/identity/entities/login.entity.ts",{"_index":408,"title":{},"body":{"entities/LoginEntity.html":{},"coverage.html":{}}}],["src/identity/entities/login.entity.ts:13",{"_index":409,"title":{},"body":{"entities/LoginEntity.html":{}}}],["src/identity/entities/login.entity.ts:9",{"_index":410,"title":{},"body":{"entities/LoginEntity.html":{}}}],["src/identity/entities/user.entity.ts",{"_index":514,"title":{},"body":{"entities/UserEntity.html":{},"coverage.html":{}}}],["src/identity/entities/user.entity.ts:11",{"_index":515,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/identity/entities/user.entity.ts:14",{"_index":517,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/identity/entities/user.entity.ts:18",{"_index":516,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/identity/entities/user.entity.ts:8",{"_index":518,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/identity/identity.module.ts",{"_index":393,"title":{},"body":{"modules/IdentityModule.html":{}}}],["src/identity/models/user.model",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BankingGatewayService.html":{}}}],["src/identity/models/user.model.ts",{"_index":399,"title":{},"body":{"classes/LoginCredentials.html":{},"classes/UserDto.html":{},"coverage.html":{}}}],["src/identity/models/user.model.ts:10",{"_index":506,"title":{},"body":{"classes/UserDto.html":{}}}],["src/identity/models/user.model.ts:15",{"_index":402,"title":{},"body":{"classes/LoginCredentials.html":{}}}],["src/identity/models/user.model.ts:16",{"_index":401,"title":{},"body":{"classes/LoginCredentials.html":{}}}],["src/identity/models/user.model.ts:6",{"_index":508,"title":{},"body":{"classes/UserDto.html":{}}}],["src/identity/models/user.model.ts:7",{"_index":507,"title":{},"body":{"classes/UserDto.html":{}}}],["src/identity/models/user.model.ts:9",{"_index":505,"title":{},"body":{"classes/UserDto.html":{}}}],["src/identity/services/auth.service",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/identity/services/auth.service.ts",{"_index":83,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/identity/services/auth.service.ts:14",{"_index":95,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/identity/services/auth.service.ts:26",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/identity/services/auth.service.ts:37",{"_index":98,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/identity/services/auth.service.ts:55",{"_index":106,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/identity/services/auth.service.ts:69",{"_index":111,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/main.ts",{"_index":599,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/messenger/controller/messages.controller.ts",{"_index":425,"title":{},"body":{"controllers/MessagesController.html":{},"coverage.html":{}}}],["src/messenger/controller/messages.controller.ts:22",{"_index":439,"title":{},"body":{"controllers/MessagesController.html":{}}}],["src/messenger/controller/messages.controller.ts:28",{"_index":441,"title":{},"body":{"controllers/MessagesController.html":{}}}],["src/messenger/controller/messages.controller.ts:34",{"_index":444,"title":{},"body":{"controllers/MessagesController.html":{}}}],["src/messenger/controller/messages.controller.ts:40",{"_index":437,"title":{},"body":{"controllers/MessagesController.html":{}}}],["src/messenger/controller/messages.controller.ts:45",{"_index":435,"title":{},"body":{"controllers/MessagesController.html":{}}}],["src/messenger/controller/messages.controller.ts:50",{"_index":433,"title":{},"body":{"controllers/MessagesController.html":{}}}],["src/messenger/controller/messages.controller.ts:55",{"_index":447,"title":{},"body":{"controllers/MessagesController.html":{}}}],["src/messenger/entities/message",{"_index":414,"title":{},"body":{"entities/MessageLogEntity.html":{},"injectables/MessagesService.html":{},"coverage.html":{}}}],["src/messenger/messenger.module",{"_index":311,"title":{},"body":{"modules/BankingModule.html":{},"modules/IdentityModule.html":{},"modules/V1Module.html":{}}}],["src/messenger/messenger.module.ts",{"_index":486,"title":{},"body":{"modules/MessengerModule.html":{}}}],["src/messenger/models/message.model",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankingController.html":{},"injectables/MessagesService.html":{}}}],["src/messenger/models/message.model.ts",{"_index":421,"title":{},"body":{"classes/MessageModel.html":{},"coverage.html":{}}}],["src/messenger/models/message.model.ts:4",{"_index":423,"title":{},"body":{"classes/MessageModel.html":{}}}],["src/messenger/models/message.model.ts:5",{"_index":422,"title":{},"body":{"classes/MessageModel.html":{}}}],["src/messenger/services/messages.service",{"_index":337,"title":{},"body":{"injectables/BankingService.html":{},"controllers/MessagesController.html":{}}}],["src/messenger/services/messages.service.ts",{"_index":462,"title":{},"body":{"injectables/MessagesService.html":{},"coverage.html":{}}}],["src/messenger/services/messages.service.ts:11",{"_index":466,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/messenger/services/messages.service.ts:13",{"_index":471,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/v1/controllers/v1/v1.controller.ts",{"_index":521,"title":{},"body":{"controllers/V1Controller.html":{},"coverage.html":{}}}],["src/v1/controllers/v1/v1.controller.ts:24",{"_index":545,"title":{},"body":{"controllers/V1Controller.html":{}}}],["src/v1/controllers/v1/v1.controller.ts:34",{"_index":537,"title":{},"body":{"controllers/V1Controller.html":{}}}],["src/v1/controllers/v1/v1.controller.ts:44",{"_index":541,"title":{},"body":{"controllers/V1Controller.html":{}}}],["src/v1/controllers/v1/v1.controller.ts:55",{"_index":534,"title":{},"body":{"controllers/V1Controller.html":{}}}],["src/v1/controllers/v1/v1.controller.ts:66",{"_index":530,"title":{},"body":{"controllers/V1Controller.html":{}}}],["src/v1/controllers/v1/v1.controller.ts:77",{"_index":526,"title":{},"body":{"controllers/V1Controller.html":{}}}],["src/v1/controllers/v1/v1.controller.ts:88",{"_index":550,"title":{},"body":{"controllers/V1Controller.html":{}}}],["src/v1/services/banking.service",{"_index":555,"title":{},"body":{"controllers/V1Controller.html":{}}}],["src/v1/services/banking.service.ts",{"_index":267,"title":{},"body":{"injectables/BankingGatewayService.html":{},"coverage.html":{}}}],["src/v1/services/banking.service.ts:12",{"_index":281,"title":{},"body":{"injectables/BankingGatewayService.html":{}}}],["src/v1/services/banking.service.ts:16",{"_index":289,"title":{},"body":{"injectables/BankingGatewayService.html":{}}}],["src/v1/services/banking.service.ts:20",{"_index":291,"title":{},"body":{"injectables/BankingGatewayService.html":{}}}],["src/v1/services/banking.service.ts:24",{"_index":288,"title":{},"body":{"injectables/BankingGatewayService.html":{}}}],["src/v1/services/banking.service.ts:28",{"_index":284,"title":{},"body":{"injectables/BankingGatewayService.html":{}}}],["src/v1/services/banking.service.ts:32",{"_index":286,"title":{},"body":{"injectables/BankingGatewayService.html":{}}}],["src/v1/services/banking.service.ts:36",{"_index":293,"title":{},"body":{"injectables/BankingGatewayService.html":{}}}],["src/v1/services/banking.service.ts:9",{"_index":279,"title":{},"body":{"injectables/BankingGatewayService.html":{}}}],["src/v1/v1.module.ts",{"_index":579,"title":{},"body":{"modules/V1Module.html":{}}}],["start",{"_index":656,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":659,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":661,"title":{},"body":{"index.html":{}}}],["started",{"_index":632,"title":{"index.html":{}},"body":{}}],["starter",{"_index":644,"title":{},"body":{"index.html":{}}}],["statement",{"_index":49,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankingController.html":{},"injectables/BankingGatewayService.html":{},"injectables/BankingService.html":{},"controllers/MessagesController.html":{}}}],["statement$(@payload",{"_index":257,"title":{},"body":{"controllers/BankingController.html":{}}}],["statement$(data",{"_index":245,"title":{},"body":{"controllers/BankingController.html":{}}}],["statement/:token",{"_index":533,"title":{},"body":{"controllers/V1Controller.html":{}}}],["statemententity",{"_index":309,"title":{"entities/StatementEntity.html":{}},"body":{"modules/BankingModule.html":{},"injectables/BankingService.html":{},"entities/StatementEntity.html":{},"coverage.html":{}}}],["statementrepository",{"_index":319,"title":{},"body":{"injectables/BankingService.html":{}}}],["statements",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":701,"title":{},"body":{"index.html":{}}}],["stored",{"_index":547,"title":{},"body":{"controllers/V1Controller.html":{}}}],["stores",{"_index":546,"title":{},"body":{"controllers/V1Controller.html":{}}}],["string",{"_index":105,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BankingGatewayService.html":{},"injectables/BankingService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/DataResponse.html":{},"classes/LoginCredentials.html":{},"entities/LoginEntity.html":{},"entities/MessageLogEntity.html":{},"classes/MessageModel.html":{},"injectables/MessagesService.html":{},"entities/StatementEntity.html":{},"classes/TransactionDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"controllers/V1Controller.html":{}}}],["sub",{"_index":12,"title":{},"body":{"controllers/AuthController.html":{}}}],["successfully",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["sumres",{"_index":349,"title":{},"body":{"injectables/BankingService.html":{}}}],["support",{"_index":678,"title":{},"body":{"index.html":{},"modules.html":{}}}],["surname",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginCredentials.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{}}}],["svg",{"_index":716,"title":{},"body":{"modules.html":{}}}],["switchall",{"_index":335,"title":{},"body":{"injectables/BankingService.html":{}}}],["switchmap",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BankingService.html":{}}}],["synchronize",{"_index":230,"title":{},"body":{"modules/BankServiceModule.html":{}}}],["system",{"_index":44,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/V1Controller.html":{}}}],["system's",{"_index":453,"title":{},"body":{"controllers/MessagesController.html":{}}}],["t",{"_index":385,"title":{},"body":{"classes/DataResponse.html":{},"classes/MessageModel.html":{}}}],["table",{"_index":323,"title":{},"body":{"injectables/BankingService.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":606,"title":{},"body":{"coverage.html":{}}}],["tasks",{"_index":271,"title":{},"body":{"injectables/BankingGatewayService.html":{}}}],["test",{"_index":664,"title":{},"body":{"index.html":{}}}],["test:covresources",{"_index":667,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":666,"title":{},"body":{"index.html":{}}}],["tests",{"_index":662,"title":{},"body":{"index.html":{}}}],["that's",{"_index":326,"title":{},"body":{"injectables/BankingService.html":{},"controllers/MessagesController.html":{}}}],["this.accountbalance$(token).pipe(switchmap((balres",{"_index":350,"title":{},"body":{"injectables/BankingService.html":{}}}],["this.accountbalance$(useridres.data",{"_index":358,"title":{},"body":{"injectables/BankingService.html":{}}}],["this.authservice.createuser$(data.payload",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getuserid$(data.userid",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login$(data.payload",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout$(data.userid",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.banking.send('create",{"_index":297,"title":{},"body":{"injectables/BankingGatewayService.html":{}}}],["this.banking.send('deposit",{"_index":301,"title":{},"body":{"injectables/BankingGatewayService.html":{}}}],["this.banking.send('get",{"_index":300,"title":{},"body":{"injectables/BankingGatewayService.html":{}}}],["this.banking.send('login",{"_index":298,"title":{},"body":{"injectables/BankingGatewayService.html":{}}}],["this.banking.send('logout",{"_index":299,"title":{},"body":{"injectables/BankingGatewayService.html":{}}}],["this.banking.send('withdraw",{"_index":303,"title":{},"body":{"injectables/BankingGatewayService.html":{}}}],["this.bankingservice.accountbalance$(data.userid",{"_index":260,"title":{},"body":{"controllers/BankingController.html":{}}}],["this.bankingservice.createaccount$(userdto",{"_index":559,"title":{},"body":{"controllers/V1Controller.html":{}}}],["this.bankingservice.depositamount$(data.userid",{"_index":265,"title":{},"body":{"controllers/BankingController.html":{}}}],["this.bankingservice.depositamount$(token",{"_index":573,"title":{},"body":{"controllers/V1Controller.html":{}}}],["this.bankingservice.getbalance$(token",{"_index":570,"title":{},"body":{"controllers/V1Controller.html":{}}}],["this.bankingservice.getstatement$(data.userid",{"_index":258,"title":{},"body":{"controllers/BankingController.html":{}}}],["this.bankingservice.getstatement$(token",{"_index":568,"title":{},"body":{"controllers/V1Controller.html":{}}}],["this.bankingservice.login$(logincredentials",{"_index":562,"title":{},"body":{"controllers/V1Controller.html":{}}}],["this.bankingservice.logout$(token",{"_index":565,"title":{},"body":{"controllers/V1Controller.html":{}}}],["this.bankingservice.withdrawamount$(data.userid",{"_index":262,"title":{},"body":{"controllers/BankingController.html":{}}}],["this.bankingservice.withdrawmoney$(token",{"_index":576,"title":{},"body":{"controllers/V1Controller.html":{}}}],["this.client.send>(header",{"_index":482,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this.messagelogrepository.save",{"_index":479,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this.messageservice.broadcastmessage$(token",{"_index":339,"title":{},"body":{"injectables/BankingService.html":{}}}],["this.messagingservice.broadcastmessage",{"_index":455,"title":{},"body":{"controllers/MessagesController.html":{}}}],["this.salt",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["time",{"_index":693,"title":{},"body":{"index.html":{}}}],["token",{"_index":39,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankingGatewayService.html":{},"injectables/BankingService.html":{},"controllers/V1Controller.html":{}}}],["transaction",{"_index":120,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BankingGatewayService.html":{},"injectables/BankingService.html":{},"controllers/V1Controller.html":{}}}],["transaction.amount",{"_index":356,"title":{},"body":{"injectables/BankingService.html":{}}}],["transaction.atmid",{"_index":355,"title":{},"body":{"injectables/BankingService.html":{}}}],["transactiondto",{"_index":283,"title":{"classes/TransactionDto.html":{}},"body":{"injectables/BankingGatewayService.html":{},"injectables/BankingService.html":{},"classes/TransactionDto.html":{},"controllers/V1Controller.html":{},"coverage.html":{}}}],["transation",{"_index":103,"title":{},"body":{"injectables/AuthService.html":{}}}],["transport",{"_index":395,"title":{},"body":{"modules/IdentityModule.html":{},"modules/MessengerModule.html":{},"modules/V1Module.html":{}}}],["transport.nats",{"_index":492,"title":{},"body":{"modules/MessengerModule.html":{},"modules/V1Module.html":{}}}],["true",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"modules/BankServiceModule.html":{}}}],["try",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["type",{"_index":32,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/BankServiceModule.html":{},"controllers/BankingController.html":{},"injectables/BankingGatewayService.html":{},"injectables/BankingService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/DataResponse.html":{},"classes/LoginCredentials.html":{},"entities/LoginEntity.html":{},"entities/MessageLogEntity.html":{},"classes/MessageModel.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"entities/StatementEntity.html":{},"classes/TransactionDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"controllers/V1Controller.html":{},"coverage.html":{}}}],["typeorm",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BankingService.html":{},"classes/BaseEntity.html":{},"entities/LoginEntity.html":{},"entities/MessageLogEntity.html":{},"injectables/MessagesService.html":{},"entities/StatementEntity.html":{},"entities/UserEntity.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":207,"title":{},"body":{"modules/BankServiceModule.html":{},"modules/BankingModule.html":{},"modules/IdentityModule.html":{},"modules/MessengerModule.html":{}}}],["typeormmodule.forfeature([messagelogentity",{"_index":490,"title":{},"body":{"modules/MessengerModule.html":{}}}],["typeormmodule.forfeature([statemententity",{"_index":312,"title":{},"body":{"modules/BankingModule.html":{}}}],["typeormmodule.forfeature([userentity",{"_index":398,"title":{},"body":{"modules/IdentityModule.html":{}}}],["typeormmodule.forrootasync",{"_index":216,"title":{},"body":{"modules/BankServiceModule.html":{}}}],["typescript",{"_index":643,"title":{},"body":{"index.html":{}}}],["unable",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{}}}],["unit",{"_index":663,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":724,"title":{},"body":{"properties.html":{}}}],["updatedatecolumn",{"_index":379,"title":{},"body":{"classes/BaseEntity.html":{},"entities/UserEntity.html":{}}}],["updates",{"_index":703,"title":{},"body":{"index.html":{}}}],["used",{"_index":542,"title":{},"body":{"controllers/V1Controller.html":{}}}],["usefactory",{"_index":218,"title":{},"body":{"modules/BankServiceModule.html":{}}}],["user",{"_index":27,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankingGatewayService.html":{},"injectables/BankingService.html":{},"controllers/MessagesController.html":{},"controllers/V1Controller.html":{}}}],["user's",{"_index":108,"title":{},"body":{"injectables/AuthService.html":{},"controllers/V1Controller.html":{}}}],["user.name",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.surname",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdto",{"_index":97,"title":{"classes/UserDto.html":{}},"body":{"injectables/AuthService.html":{},"injectables/BankingGatewayService.html":{},"classes/LoginCredentials.html":{},"classes/UserDto.html":{},"controllers/V1Controller.html":{},"coverage.html":{}}}],["userentity",{"_index":128,"title":{"entities/UserEntity.html":{}},"body":{"injectables/AuthService.html":{},"modules/IdentityModule.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["userid",{"_index":21,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankingGatewayService.html":{},"injectables/BankingService.html":{},"entities/LoginEntity.html":{},"entities/MessageLogEntity.html":{},"classes/MessageModel.html":{},"injectables/MessagesService.html":{},"entities/StatementEntity.html":{}}}],["userid$(@payload",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{}}}],["userid$(data",{"_index":51,"title":{},"body":{"controllers/AuthController.html":{}}}],["useridres",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["useridres.data",{"_index":344,"title":{},"body":{"injectables/BankingService.html":{}}}],["useridres.iserror",{"_index":341,"title":{},"body":{"injectables/BankingService.html":{}}}],["useridres.logintoken",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["username",{"_index":113,"title":{},"body":{"injectables/AuthService.html":{},"modules/BankServiceModule.html":{},"classes/LoginCredentials.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{}}}],["userrepository",{"_index":92,"title":{},"body":{"injectables/AuthService.html":{}}}],["using",{"_index":694,"title":{},"body":{"index.html":{}}}],["v1/banking",{"_index":522,"title":{},"body":{"controllers/V1Controller.html":{}}}],["v1/v1.module",{"_index":203,"title":{},"body":{"modules/BankServiceModule.html":{}}}],["v1controller",{"_index":520,"title":{"controllers/V1Controller.html":{}},"body":{"controllers/V1Controller.html":{},"modules/V1Module.html":{},"coverage.html":{}}}],["v1module",{"_index":202,"title":{"modules/V1Module.html":{}},"body":{"modules/BankServiceModule.html":{},"modules/V1Module.html":{},"modules.html":{},"overview.html":{}}}],["version",{"_index":722,"title":{},"body":{"properties.html":{}}}],["video",{"_index":686,"title":{},"body":{"index.html":{}}}],["visit",{"_index":674,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":688,"title":{},"body":{"index.html":{}}}],["watch",{"_index":657,"title":{},"body":{"index.html":{}}}],["withdraw",{"_index":248,"title":{},"body":{"controllers/BankingController.html":{},"controllers/MessagesController.html":{},"controllers/V1Controller.html":{}}}],["withdraw(@param('token",{"_index":575,"title":{},"body":{"controllers/V1Controller.html":{}}}],["withdraw(token",{"_index":548,"title":{},"body":{"controllers/V1Controller.html":{}}}],["withdrawal",{"_index":251,"title":{},"body":{"controllers/BankingController.html":{},"injectables/BankingService.html":{},"controllers/V1Controller.html":{}}}],["withdrawamount",{"_index":316,"title":{},"body":{"injectables/BankingService.html":{},"controllers/MessagesController.html":{}}}],["withdrawamount$(token",{"_index":332,"title":{},"body":{"injectables/BankingService.html":{}}}],["withdrawamount(@payload",{"_index":461,"title":{},"body":{"controllers/MessagesController.html":{}}}],["withdrawamount(data",{"_index":445,"title":{},"body":{"controllers/MessagesController.html":{}}}],["withdrawfunds",{"_index":238,"title":{},"body":{"controllers/BankingController.html":{}}}],["withdrawfunds$(@payload",{"_index":261,"title":{},"body":{"controllers/BankingController.html":{}}}],["withdrawfunds$(data",{"_index":247,"title":{},"body":{"controllers/BankingController.html":{}}}],["withdrawmoney",{"_index":276,"title":{},"body":{"injectables/BankingGatewayService.html":{}}}],["withdrawmoney$(token",{"_index":292,"title":{},"body":{"injectables/BankingGatewayService.html":{}}}],["working",{"_index":672,"title":{},"body":{"index.html":{}}}],["x",{"_index":705,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":197,"title":{},"body":{"modules/BankServiceModule.html":{},"modules/BankingModule.html":{},"modules/IdentityModule.html":{},"modules/MessengerModule.html":{},"modules/V1Module.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/identity/controller/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n            \n                Description\n            \n            \n                This controller acts as a pub-sub for the  account authentication functionality\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                login$\n                            \n                            \n                                    \n                                logout$\n                            \n                            \n                                    \n                                newUser$\n                            \n                            \n                                    \n                                userId$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        login$\n                        \n                    \n                \n            \n            \n                \n                        \n                    login$(data: MessageModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('login-user')\n                \n            \n\n                    \n                        \n                            Defined in src/identity/controller/auth.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            MessageModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user payload\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                Publishes the login token to the user\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logout$\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout$(data: MessageModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('logout-user')\n                \n            \n\n                    \n                        \n                            Defined in src/identity/controller/auth.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            MessageModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The account payload\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                Publishes the logout response to the system, and releases their token\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        newUser$\n                        \n                    \n                \n            \n            \n                \n                        \n                    newUser$(data: MessageModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('new-user')\n                \n            \n\n                    \n                        \n                            Defined in src/identity/controller/auth.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            MessageModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The account payload\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                Publishes the statement from the publisher\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId$\n                        \n                    \n                \n            \n            \n                \n                        \n                    userId$(data: MessageModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('get-user-id')\n                \n            \n\n                    \n                        \n                            Defined in src/identity/controller/auth.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            MessageModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The account payload\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                Publishes the user id\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { MessagePattern, Payload } from '@nestjs/microservices';\n\nimport { Observable, of } from 'rxjs';\nimport { DataResponse } from 'src/base/response';\nimport { AuthService } from 'src/identity/services/auth.service';\nimport { MessageModel } from 'src/messenger/models/message.model';\n\n/**\n * This controller acts as a pub-sub for the  account authentication functionality\n */\n@Controller('auth')\nexport class AuthController {\n  /**\n   * \n   * @param authService \n   */\n  constructor(public authService: AuthService) { }\n\n  /**\n   * \n   * @param data The user payload\n   * @returns {Observable} Publishes the login token to the user\n   */\n  @MessagePattern('login-user')\n  login$(@Payload() data: MessageModel): Observable> {\n    return this.authService.login$(data.payload);\n  }\n\n  /**\n   * \n   * @param data The account payload\n   * @returns {Observable} Publishes the user id\n   */\n  @MessagePattern('get-user-id')\n  userId$(@Payload() data: MessageModel): Observable> {\n    return this.authService.getUserId$(data.userId);\n  }\n\n\n  /**\n   * \n   * @param data The account payload\n   * @returns {Observable} Publishes the logout response to the system, and releases their token\n   */\n  @MessagePattern('logout-user')\n  logout$(@Payload() data: MessageModel): Observable> {\n    return this.authService.logout$(data.userId);\n  }\n\n\n  /**\n   * \n   * @param data The account payload\n   * @returns {Observable} Publishes the statement from the publisher\n   */\n  @MessagePattern('new-user')\n  newUser$(@Payload() data: MessageModel): Observable> {\n    return this.authService.createUser$(data.payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/identity/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                salt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser$\n                            \n                            \n                                getUserId$\n                            \n                            \n                                login$\n                            \n                            \n                                logout$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, userRepository: Repository, loginRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/identity/services/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser$\n                        \n                    \n                \n            \n            \n                \ncreateUser$(user: UserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/identity/services/auth.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Creates a new user in the system\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User Information\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                Response from the user created transation\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserId$\n                        \n                    \n                \n            \n            \n                \ngetUserId$(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/identity/services/auth.service.ts:55\n                        \n                    \n\n\n            \n                \n                        Request the user's information\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    user token\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                the user's id\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login$\n                        \n                    \n                \n            \n            \n                \nlogin$(loginCredentials: LoginCredentials)\n                \n            \n\n\n                    \n                        \n                            Defined in src/identity/services/auth.service.ts:69\n                        \n                    \n\n\n            \n                \n                        Log's the user into the system\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                loginCredentials\n                                            \n                                                            LoginCredentials\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User's username and password\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The user's token\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout$\n                        \n                    \n                \n            \n            \n                \nlogout$(loginToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/identity/services/auth.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Logs the user out of the system\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                loginToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user's token\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The response from the transaction\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        salt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/identity/services/auth.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Observable, from, map, of, switchMap } from 'rxjs';\nimport { DataResponse } from 'src/base/response';\nimport { LoginCredentials, UserDto } from 'src/identity/models/user.model';\nimport * as crypto from 'crypto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from './../entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { LoginEntity } from '../entities/login.entity';\n\n@Injectable()\nexport class AuthService {\n    private salt: string;\n    constructor(private configService: ConfigService, @InjectRepository(UserEntity) private userRepository: Repository, @InjectRepository(LoginEntity) private loginRepository: Repository) {\n\n        console.log(configService.get('SALT'))\n        this.salt = 'arsenide'\n    }\n\n    /**\n     * Logs the user out of the system\n     * @param loginToken The user's token\n     * @returns {Observable>} The response from the transaction\n     */\n    logout$(loginToken: string) {\n        return from(this.loginRepository.delete({ loginToken })).pipe(switchMap((delRes) => {\n            return of({ message: delRes.affected == 1 ? 'Logged out successfully' : 'Unable to logout' });\n        }));\n    }\n\n    /**\n     * Creates a new user in the system\n     * @param user User Information\n     * @returns {Observable>} Response from the user created transation\n     */\n    createUser$(user: UserDto): Observable> {\n\n        return from(this.userRepository.save({\n            username: user.username, name: user.name,\n            surname: user.surname, password: crypto.pbkdf2Sync(user.password, this.salt, 10000, 64, 'sha512').toString('hex')\n        })).pipe(map((createUserRes) => {\n            if (createUserRes == null) {\n                return { isError: true, message: 'Unable to create this user' };\n            }\n            return { message: 'User created successfully' };\n        }));\n    }\n\n    /**\n     * Request the user's information\n     * @param token user token\n     * @returns {Observable>} the user's id\n     */\n    getUserId$(token: string): Observable> {\n        return from(this.loginRepository.findOne({ where: { loginToken: token } })).pipe(map((userIdRes) => {\n            if (userIdRes == null) {\n                return ({ isError: true, message: 'Unable to retrieve the record' })\n            }\n            return { isError: false, data: userIdRes.loginToken };\n        }));\n    }\n\n    /**\n     * Log's the user into the system\n     * @param loginCredentials User's username and password\n     * @returns {Observable>} The user's token\n     */\n    login$(loginCredentials: LoginCredentials) {\n        return from(this.userRepository.findOne({ where: { username: loginCredentials.username, password: crypto.pbkdf2Sync(loginCredentials.password, this.salt, 10000, 64, 'sha512').toString('hex') } })).pipe(switchMap((queryRes) => {\n            if (queryRes == null) {\n                return of({ isError: true, message: 'Unable to login. Please check your credentials, and try again' });\n            }\n            return from(this.loginRepository.save({\n                userId: queryRes.id,\n                loginToken: crypto.pbkdf2Sync(queryRes.password + 'true', this.salt, 10000, 64, 'sha512').toString('hex')\n            })\n            ).pipe(map((res) => {\n                return { data: res.loginToken };\n            }));\n        }));\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BankServiceModule.html":{"url":"modules/BankServiceModule.html","title":"module - BankServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    BankServiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BankServiceModule\n\n\n\ncluster_BankServiceModule_imports\n\n\n\n\nBankingModule\n\nBankingModule\n\n\n\nBankServiceModule\n\nBankServiceModule\n\nBankServiceModule -->\n\nBankingModule->BankServiceModule\n\n\n\n\n\nIdentityModule\n\nIdentityModule\n\nBankServiceModule -->\n\nIdentityModule->BankServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/bank-service.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BankingModule\n                        \n                        \n                            IdentityModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { V1Module } from './v1/v1.module';\nimport { IdentityModule } from './identity/identity.module';\nimport { MessengerModule } from './messenger/messenger.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { BankingModule } from './banking/banking.module';\nimport * as path from 'path';\n\n@Module({\n  imports: [IdentityModule, BankingModule, ConfigModule.forRoot({\n    envFilePath: path.resolve(__dirname, '.env'),\n    isGlobal: true\n  }), TypeOrmModule.forRootAsync({\n    imports: [ConfigModule],\n    inject: [ConfigService],\n    useFactory: (configService: ConfigService) => ({\n      type: 'postgres',\n      host: configService.get('DATABASE_HOST'),\n      port: configService.get('DATABASE_PORT'),\n      username: configService.get('DATABASE_USERNAME'),\n      password: configService.get('DATABASE_PASSWORD'),\n      database: configService.get('DATABASE_NAME'),\n      autoLoadEntities: true,\n      logging: true,\n      synchronize: true,\n    }),\n  })\n  ],\n})\nexport class BankServiceModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BankingController.html":{"url":"controllers/BankingController.html","title":"controller - BankingController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BankingController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/banking/controllers/banking.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                banking\n            \n\n\n            \n                Description\n            \n            \n                This is a pubsub for the banking functionality in the MQ\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accountBalance$\n                            \n                            \n                                    \n                                deposit\n                            \n                            \n                                    \n                                statement$\n                            \n                            \n                                    \n                                withdrawFunds$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accountBalance$\n                        \n                    \n                \n            \n            \n                \n                        \n                    accountBalance$(data: MessageModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('account-balance')\n                \n            \n\n                    \n                        \n                            Defined in src/banking/controllers/banking.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            MessageModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The account payload\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Publishes the account balance\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deposit\n                        \n                    \n                \n            \n            \n                \n                        \n                    deposit(data: MessageModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('account-deposit')\n                \n            \n\n                    \n                        \n                            Defined in src/banking/controllers/banking.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            MessageModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The account payload\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        statement$\n                        \n                    \n                \n            \n            \n                \n                        \n                    statement$(data: MessageModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('account-statement')\n                \n            \n\n                    \n                        \n                            Defined in src/banking/controllers/banking.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            MessageModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The account payload\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Publishes the statement from the publisher\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        withdrawFunds$\n                        \n                    \n                \n            \n            \n                \n                        \n                    withdrawFunds$(data: MessageModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('account-withdraw')\n                \n            \n\n                    \n                        \n                            Defined in src/banking/controllers/banking.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            MessageModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The account payload\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Publishes the result of the withdrawal process\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { MessagePattern, Payload } from '@nestjs/microservices';\nimport { Observable, of } from 'rxjs';\nimport { BankingService } from '../services/banking.service';\nimport { MessageModel } from 'src/messenger/models/message.model';\n\n/**\n * This is a pubsub for the banking functionality in the MQ\n */\n@Controller('banking')\nexport class BankingController {\n  /**\n   * \n   * @param bankingService Banking Service\n   */\n  constructor(public bankingService: BankingService) { }\n\n  /**\n   *\n   * @param data The account payload\n   * @returns {Observable} Publishes the statement from the publisher\n   */\n  @MessagePattern('account-statement')\n  statement$(@Payload() data: MessageModel) {\n    return this.bankingService.getStatement$(data.userId);\n  }\n\n  /**\n   * \n   * @param {any} data The account payload\n   * @returns {Observable} Publishes the account balance \n   */\n  @MessagePattern('account-balance')\n  accountBalance$(@Payload() data: MessageModel) {\n    return this.bankingService.accountBalance$(data.userId);\n  }\n\n  /**\n   * \n   * @param data The account payload\n   * @returns {Observable} Publishes the result of the withdrawal process\n   */\n  @MessagePattern('account-withdraw')\n  withdrawFunds$(@Payload() data: MessageModel) {\n\n    return this.bankingService.withdrawAmount$(data.userId, data.payload);\n  }\n\n  /**\n   * \n   * @param data The account payload\n   * @returns \n   */\n  @MessagePattern('account-deposit')\n  deposit(@Payload() data: MessageModel) {\n\n    return this.bankingService.depositAmount$(data.userId, data.payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BankingGatewayService.html":{"url":"injectables/BankingGatewayService.html","title":"injectable - BankingGatewayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BankingGatewayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/services/banking.service.ts\n        \n\n\n            \n                Description\n            \n            \n                All of the functionality publish's a message to the MQ, to perform specific tasks\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAccount$\n                            \n                            \n                                depositAmount$\n                            \n                            \n                                getBalance$\n                            \n                            \n                                getStatement$\n                            \n                            \n                                login$\n                            \n                            \n                                logout$\n                            \n                            \n                                withdrawMoney$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(banking: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/v1/services/banking.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        banking\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createAccount$\n                        \n                    \n                \n            \n            \n                \ncreateAccount$(user: UserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/services/banking.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        depositAmount$\n                        \n                    \n                \n            \n            \n                \ndepositAmount$(token: string, transaction: TransactionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/services/banking.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                transaction\n                                            \n                                                            TransactionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBalance$\n                        \n                    \n                \n            \n            \n                \ngetBalance$(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/services/banking.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStatement$\n                        \n                    \n                \n            \n            \n                \ngetStatement$(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/services/banking.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login$\n                        \n                    \n                \n            \n            \n                \nlogin$(loginCredentials: LoginCredentials)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/services/banking.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginCredentials\n                                            \n                                                            LoginCredentials\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout$\n                        \n                    \n                \n            \n            \n                \nlogout$(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/services/banking.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        withdrawMoney$\n                        \n                    \n                \n            \n            \n                \nwithdrawMoney$(token: string, transaction: TransactionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/services/banking.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                transaction\n                                            \n                                                            TransactionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { LoginCredentials, UserDto } from 'src/identity/models/user.model';\nimport { TransactionDto } from 'src/banking/models/banking';\n/**\n * All of the functionality publish's a message to the MQ, to perform specific tasks\n */\n@Injectable()\nexport class BankingGatewayService {\n    constructor(@Inject('banking') private readonly banking: ClientProxy,) {}\n\n    createAccount$(user: UserDto) {\n        return this.banking.send('create-account', { userId: '', payload: user });\n    }\n\n    login$(loginCredentials: LoginCredentials) {\n        return this.banking.send('login', { userId: '', payload: loginCredentials });\n    }\n\n    logout$(token: string) {\n        return this.banking.send('logout', { userId: token, payload: {} });\n    }\n\n    getStatement$(token: string) {\n        return this.banking.send('get-statement', { userId: token, payload: {} });\n    }\n\n    depositAmount$(token: string, transaction: TransactionDto) {\n        return this.banking.send('deposit-amount', { userId: token, payload: transaction });\n    }\n\n    getBalance$(token: string) {\n        return this.banking.send('get-balance', { userId: token });\n    }\n\n    withdrawMoney$(token: string, transaction: TransactionDto) {\n        return this.banking.send('withdraw-amount', { userId: token, payload: transaction });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BankingModule.html":{"url":"modules/BankingModule.html","title":"module - BankingModule","body":"\n                   \n\n\n\n\n    Modules\n    BankingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BankingModule\n\n\n\ncluster_BankingModule_imports\n\n\n\ncluster_BankingModule_providers\n\n\n\n\nMessengerModule\n\nMessengerModule\n\n\n\nBankingModule\n\nBankingModule\n\nBankingModule -->\n\nMessengerModule->BankingModule\n\n\n\nBankingModule -->\n\nMessengerModule->BankingModule\n\n\n\n\n\nBankingService\n\nBankingService\n\nBankingModule -->\n\nBankingService->BankingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/banking/banking.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BankingService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BankingController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MessengerModule\n                        \n                        \n                            MessengerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BankingService } from './services/banking.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { BankingController } from './controllers/banking.controller';\nimport { StatementEntity } from './entities/statement.entity';\nimport { MessengerModule } from 'src/messenger/messenger.module';\n\n@Module({\n  imports: [\n    MessengerModule,\n    TypeOrmModule.forFeature([StatementEntity]),\n    MessengerModule\n  ],\n  providers: [BankingService],\n  controllers: [BankingController]\n})\nexport class BankingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BankingService.html":{"url":"injectables/BankingService.html","title":"injectable - BankingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BankingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/banking/services/banking.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                messageService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                accountBalance$\n                            \n                            \n                                depositAmount$\n                            \n                            \n                                getStatement$\n                            \n                            \n                                withdrawAmount$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessagesService, statementRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/banking/services/banking.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Messaging service\n\n                                                        \n                                                \n                                                \n                                                        statementRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Connection to the Statement table\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        accountBalance$\n                        \n                    \n                \n            \n            \n                \naccountBalance$(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/banking/services/banking.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User token that's generated on login\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                publishes a message, that get's the user id, and returns the balance\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        depositAmount$\n                        \n                    \n                \n            \n            \n                \ndepositAmount$(token: string, transaction: TransactionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/banking/services/banking.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User token that's generated on login\n\n                                            \n                                        \n                                        \n                                                transaction\n                                            \n                                                            TransactionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                publishes a message, that get's the user id, and performs a deposit transaction\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStatement$\n                        \n                    \n                \n            \n            \n                \ngetStatement$(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/banking/services/banking.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User token that's generated on login\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                publishes a message, that get's the user id, and returns the statement\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        withdrawAmount$\n                        \n                    \n                \n            \n            \n                \nwithdrawAmount$(token: string, transaction: TransactionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/banking/services/banking.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User token that's generated on login\n\n                                            \n                                        \n                                        \n                                                transaction\n                                            \n                                                            TransactionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                publishes a message, that get's the user id, and performs a withdrawal transaction\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessagesService\n\n                    \n                \n                    \n                        \n                                Defined in src/banking/services/banking.service.ts:17\n                        \n                    \n\n            \n                \n                    The Messaging service\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Observable, from, map, of, switchAll, switchMap } from 'rxjs';\nimport { TransactionDto } from '../models/banking';\nimport { MessagesService } from 'src/messenger/services/messages.service';\nimport { StatementEntity } from '../entities/statement.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { DataResponse } from 'src/base/response';\n\n@Injectable()\nexport class BankingService {\n    /**\n     * \n     * @param messageService The Messaging service\n     * @param statementRepository Connection to the Statement table\n     */\n    constructor(public messageService: MessagesService, @InjectRepository(StatementEntity) private statementRepository: Repository) { }\n\n    /**\n     * \n     * @param token User token that's generated on login\n     * @returns {Observable} publishes a message, that get's the user id, and returns the statement\n     */\n    getStatement$(token: string) {\n        return this.messageService.broadcastMessage$(token, 'get-user-id', '').pipe(switchMap((userIdRes) => {\n            if (userIdRes.isError) {\n                return of(userIdRes);\n            }\n            return from(this.statementRepository.findBy({ userId: userIdRes.data })).pipe(map((getStatementRes) => {\n                return { data: getStatementRes };\n            }));\n        }));\n    }\n\n    /**\n     * \n     * @param token User token that's generated on login\n     * @returns {Observable} publishes a message, that get's the user id, and returns the balance\n     */\n    accountBalance$(token: string): Observable {\n        return this.messageService.broadcastMessage$(token, 'get-user-id', '').pipe(switchMap((userIdRes) => {\n            if (userIdRes.isError) {\n                return of(userIdRes);\n            }\n            return from(this.statementRepository.sum('amount', { userId: userIdRes.data })).pipe(map(sumRes => {\n                return { isError: sumRes == null, data: sumRes }\n            }));\n        }));\n    }\n\n    /**\n     * \n     * @param token User token that's generated on login\n     * @returns {Observable} publishes a message, that get's the user id, and performs a withdrawal transaction\n     */\n    withdrawAmount$(token: string, transaction: TransactionDto) {\n        return this.messageService.broadcastMessage$(token, 'get-user-id', '').pipe(switchMap((userIdRes) => {\n            if (userIdRes.isError) {\n                return of(userIdRes);\n            }\n\n            return this.accountBalance$(token).pipe(switchMap((balRes) => {\n\n                if (balRes.data  {\n                    return { data: saveRes };\n                }));\n            }));\n        }));\n    }\n\n    /**\n     * \n     * @param token User token that's generated on login\n     * @returns {Observable} publishes a message, that get's the user id, and performs a deposit transaction\n     */\n    depositAmount$(token: string, transaction: TransactionDto) {\n        return this.messageService.broadcastMessage$(token, 'get-user-id', '').pipe(switchMap((userIdRes) => {\n            if (userIdRes.isError) {\n                return of(userIdRes);\n            }\n            return from(this.statementRepository.save({ userId: userIdRes.data, atmId: transaction.atmId, amount: transaction.amount })).pipe(switchMap((depositRes) => {\n                return this.accountBalance$(userIdRes.data);\n            }));\n        }));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseDto.html":{"url":"classes/BaseDto.html","title":"class - BaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/base.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdDate\n                            \n                            \n                                    Optional\n                                deletedDate\n                            \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                modifiedDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/base/base.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/base/base.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/base/base.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        modifiedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/base/base.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class BaseDto {\n    public id?: string;\n    createdDate?: Date;\n    modifiedDate?: Date;\n    deletedDate?: Date;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/base.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            BaseDto\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdDate\n                            \n                            \n                                    \n                                deletedDate\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                modifiedDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/base.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/base.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/base.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        modifiedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/base.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, DeleteDateColumn, Index } from 'typeorm';\nimport { BaseDto } from './base.dto';\n\nexport class BaseEntity implements BaseDto {\n    @Index()\n    @PrimaryGeneratedColumn()\n    id: string;\n\n    @CreateDateColumn()\n    createdDate: Date;\n\n    @UpdateDateColumn()\n    modifiedDate: Date;\n\n    @DeleteDateColumn()\n    deletedDate: Date;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataResponse.html":{"url":"classes/DataResponse.html","title":"class - DataResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                data\n                            \n                            \n                                    Public\n                                    Optional\n                                isError\n                            \n                            \n                                    Public\n                                    Optional\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in src/base/response.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        isError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/base/response.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/base/response.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DataResponse{\n    public isError?: boolean;\n    public data?: T;\n    public message?: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentityModule.html":{"url":"modules/IdentityModule.html","title":"module - IdentityModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentityModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IdentityModule\n\n\n\ncluster_IdentityModule_imports\n\n\n\ncluster_IdentityModule_providers\n\n\n\n\nMessengerModule\n\nMessengerModule\n\n\n\nIdentityModule\n\nIdentityModule\n\nIdentityModule -->\n\nMessengerModule->IdentityModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nIdentityModule -->\n\nAuthService->IdentityModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/identity/identity.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MessengerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { AuthService } from './services/auth.service';\nimport { ConfigModule } from '@nestjs/config';\nimport { AuthController } from './controller/auth.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserEntity } from './entities/user.entity';\nimport { LoginEntity } from './entities/login.entity';\nimport { MessengerModule } from 'src/messenger/messenger.module';\n\n@Module({\n  providers: [AuthService],\n  imports: [\n    ConfigModule,\n    MessengerModule,\n    TypeOrmModule.forFeature([UserEntity, LoginEntity]),\n\n  ],\n  controllers: [AuthController],\n})\nexport class IdentityModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginCredentials.html":{"url":"classes/LoginCredentials.html","title":"class - LoginCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/identity/models/user.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                password\n                            \n                            \n                                    \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/identity/models/user.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/identity/models/user.model.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { BaseDto } from 'src/base/base.dto';\n\nexport class UserDto extends BaseDto {\n    //@ApiProperty() public id: string;\n    @ApiProperty() public username: string;\n    @ApiProperty() public surname: string;\n\n    @ApiProperty() public name: string;\n    @ApiProperty() public password: string;\n\n}\n\nexport class LoginCredentials {\n    @ApiProperty() public username: string;\n    @ApiProperty() public password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/LoginEntity.html":{"url":"entities/LoginEntity.html","title":"entity - LoginEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  LoginEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/identity/entities/login.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                loginToken\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        loginToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/identity/entities/login.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/identity/entities/login.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        \nimport { BaseEntity } from \"src/base/base.entity\";\nimport { Column, Entity } from \"typeorm\";\n\n@Entity('Login')\nexport class LoginEntity extends BaseEntity {\n\n    @Column()\n    userId: string;\n\n\n    @Column()\n    loginToken: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MessageLogEntity.html":{"url":"entities/MessageLogEntity.html","title":"entity - MessageLogEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MessageLogEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/messenger/entities/message-log.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                cmd\n                            \n                            \n                                    \n                                payload\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cmd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/messenger/entities/message-log.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/messenger/entities/message-log.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/messenger/entities/message-log.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BaseEntity } from \"src/base/base.entity\";\nimport { Column, Entity } from \"typeorm\";\n\n@Entity('MessageLog')\nexport class MessageLogEntity extends BaseEntity {\n\n    @Column()\n    userId: string;\n\n    @Column()\n    payload: string;\n\n    @Column()\n    cmd: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageModel.html":{"url":"classes/MessageModel.html","title":"class - MessageModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/messenger/models/message.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in src/messenger/models/message.model.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/messenger/models/message.model.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseDto } from 'src/base/base.dto';\n\nexport class MessageModel {\n    public userId: string;\n    public payload: T;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MessagesController.html":{"url":"controllers/MessagesController.html","title":"controller - MessagesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MessagesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/messenger/controller/messages.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                messages\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                depaositAmount\n                            \n                            \n                                    \n                                getbalance\n                            \n                            \n                                    \n                                getStatement\n                            \n                            \n                                    \n                                login\n                            \n                            \n                                    \n                                logout\n                            \n                            \n                                    \n                                newAccount\n                            \n                            \n                                    \n                                withdrawAmount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        depaositAmount\n                        \n                    \n                \n            \n            \n                \n                        \n                    depaositAmount(data: MessageModel, context: NatsContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('deposit-amount')\n                \n            \n\n                    \n                        \n                            Defined in src/messenger/controller/messages.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            MessageModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        NatsContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getbalance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getbalance(data: MessageModel, context: NatsContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('get-balance')\n                \n            \n\n                    \n                        \n                            Defined in src/messenger/controller/messages.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            MessageModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        NatsContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getStatement\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStatement(data: MessageModel, context: NatsContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('get-statement')\n                \n            \n\n                    \n                        \n                            Defined in src/messenger/controller/messages.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            MessageModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        NatsContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(data: MessageModel, context: NatsContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('login')\n                \n            \n\n                    \n                        \n                            Defined in src/messenger/controller/messages.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            MessageModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        NatsContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(data: MessageModel, context: NatsContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('logout')\n                \n            \n\n                    \n                        \n                            Defined in src/messenger/controller/messages.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            MessageModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        NatsContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        newAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    newAccount(data: MessageModel, context: NatsContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('create-account')\n                \n            \n\n                    \n                        \n                            Defined in src/messenger/controller/messages.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            MessageModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        NatsContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        withdrawAmount\n                        \n                    \n                \n            \n            \n                \n                        \n                    withdrawAmount(data: MessageModel, context: NatsContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('withdraw-amount')\n                \n            \n\n                    \n                        \n                            Defined in src/messenger/controller/messages.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            MessageModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        NatsContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport {\n    MessagePattern,\n    EventPattern,\n    Payload,\n    Ctx,\n    NatsContext,\n  } from '@nestjs/microservices';\nimport { of } from 'rxjs';\nimport { MessagesService } from 'src/messenger/services/messages.service';\nimport { MessageModel } from '../models/message.model';\n\n@Controller('messages')\nexport class MessagesController {\n  /**\n   * \n   * @param messagingService That's the system's messaging service\n   */\n  constructor(public messagingService: MessagesService){}\n\n  @MessagePattern('login')\n  login(@Payload() data: MessageModel, @Ctx() context: NatsContext) {\n    \n    return this.messagingService.broadcastMessage$('', 'login-user', data);\n  }\n  \n  @MessagePattern('logout')\n  logout(@Payload() data: MessageModel, @Ctx() context: NatsContext) {\n    \n    return this.messagingService.broadcastMessage$('', 'logout-user', data);\n  }\n  \n  @MessagePattern('create-account')\n  newAccount(@Payload() data: MessageModel, @Ctx() context: NatsContext) {\n    \n    return this.messagingService.broadcastMessage$('', 'new-user', data);\n  }\n  \n  @MessagePattern('get-statement')\n  getStatement(@Payload() data: MessageModel, @Ctx() context: NatsContext) {\n    return this.messagingService.broadcastMessage$('', 'account-statement', data);\n  }\n\n  @MessagePattern('get-balance')\n  getbalance(@Payload() data: MessageModel, @Ctx() context: NatsContext) {\n    return this.messagingService.broadcastMessage$('', 'account-balance', data);\n  }\n  \n  @MessagePattern('deposit-amount')\n  depaositAmount(@Payload() data: MessageModel, @Ctx() context: NatsContext) {\n    return this.messagingService.broadcastMessage$('', 'account-deposit', data);\n  }\n  \n  @MessagePattern('withdraw-amount')\n  withdrawAmount(@Payload() data: MessageModel, @Ctx() context: NatsContext) {\n    return this.messagingService.broadcastMessage$('', 'account-withdraw', data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessagesService.html":{"url":"injectables/MessagesService.html","title":"injectable - MessagesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/messenger/services/messages.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                broadcastMessage$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(messageLogRepository: Repository, client: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/messenger/services/messages.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        messageLogRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        broadcastMessage$\n                        \n                    \n                \n            \n            \n                \nbroadcastMessage$(userId: string, header: string, payload: PayloadType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/messenger/services/messages.service.ts:13\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    PayloadType\n                                    ResponseType\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                header\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        PayloadType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         rxjs.Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport * as nats from 'nats';\nimport * as rxjs from 'rxjs';\nimport { DataResponse } from 'src/base/response';\nimport { MessageLogEntity } from 'src/messenger/entities/message-log.entity';\nimport { MessageModel } from 'src/messenger/models/message.model';\nimport { Repository } from 'typeorm';\n@Injectable()\nexport class MessagesService {\n    constructor(@InjectRepository(MessageLogEntity) private messageLogRepository: Repository, @Inject('banking') private client: ClientProxy) { }\n    broadcastMessage$(userId: string, header: string, payload: PayloadType): rxjs.Observable> {\n        return rxjs.from(\n            this.messageLogRepository.save({ userId, payload: JSON.stringify(payload), cmd: header, createdDate: Date() })).pipe(rxjs.switchMap(result => {\n                return this.client.send>(header, payload);\n            }));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MessengerModule.html":{"url":"modules/MessengerModule.html","title":"module - MessengerModule","body":"\n                   \n\n\n\n\n    Modules\n    MessengerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MessengerModule\n\n\n\ncluster_MessengerModule_exports\n\n\n\ncluster_MessengerModule_providers\n\n\n\n\nMessagesService \n\nMessagesService \n\n\n\nMessengerModule\n\nMessengerModule\n\nMessagesService  -->\n\nMessengerModule->MessagesService \n\n\n\n\n\nMessagesService\n\nMessagesService\n\nMessengerModule -->\n\nMessagesService->MessengerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/messenger/messenger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MessagesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MessagesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MessagesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MessagesController } from './controller/messages.controller';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { MessageLogEntity } from './entities/message-log.entity';\nimport { MessagesService } from './services/messages.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([MessageLogEntity]),\n    ClientsModule.register([\n      {\n        name: 'banking',\n        transport: Transport.NATS,\n        options: {\n          servers: ['nats://localhost:4222'],\n          \n        }\n      },\n    ]),\n  ],\n  controllers: [MessagesController],\n  providers: [MessagesService],\n  exports: [MessagesService]\n})\nexport class MessengerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/StatementEntity.html":{"url":"entities/StatementEntity.html","title":"entity - StatementEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  StatementEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/banking/entities/statement.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                atmId\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/banking/entities/statement.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        atmId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/banking/entities/statement.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/banking/entities/statement.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BaseEntity } from \"src/base/base.entity\";\nimport { Column, Entity } from \"typeorm\";\n\n@Entity('Statement')\nexport class StatementEntity extends BaseEntity {\n\n    @Column()\n    userId: string;\n\n    @Column()\n    atmId: string;\n\n    @Column()\n    amount: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionDto.html":{"url":"classes/TransactionDto.html","title":"class - TransactionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/banking/models/banking.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                amount\n                            \n                            \n                                    \n                                    Public\n                                atmId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/banking/models/banking.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        atmId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/banking/models/banking.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class TransactionDto {\n    @ApiProperty() public amount: number;\n    @ApiProperty() public atmId: string;\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/identity/models/user.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    Public\n                                password\n                            \n                            \n                                    \n                                    Public\n                                surname\n                            \n                            \n                                    \n                                    Public\n                                username\n                            \n                            \n                                    Optional\n                                createdDate\n                            \n                            \n                                    Optional\n                                deletedDate\n                            \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                modifiedDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/identity/models/user.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/identity/models/user.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/identity/models/user.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/identity/models/user.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:4\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        modifiedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:5\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { BaseDto } from 'src/base/base.dto';\n\nexport class UserDto extends BaseDto {\n    //@ApiProperty() public id: string;\n    @ApiProperty() public username: string;\n    @ApiProperty() public surname: string;\n\n    @ApiProperty() public name: string;\n    @ApiProperty() public password: string;\n\n}\n\nexport class LoginCredentials {\n    @ApiProperty() public username: string;\n    @ApiProperty() public password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserEntity.html":{"url":"entities/UserEntity.html","title":"entity - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/identity/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                surname\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/identity/entities/user.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/identity/entities/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/identity/entities/user.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/identity/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BaseEntity } from \"src/base/base.entity\";\nimport { Column, CreateDateColumn, DeleteDateColumn, Entity, Index, UpdateDateColumn } from \"typeorm\";\n\n@Entity('User')\nexport class UserEntity extends BaseEntity {\n\n    @Column()\n    username: string;\n\n    @Column()\n    name: string;\n\n    @Column()\n    surname: string;\n\n\n    @Column()\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/V1Controller.html":{"url":"controllers/V1Controller.html","title":"controller - V1Controller","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  V1Controller\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/controllers/v1/v1.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/banking\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                deposit\n                            \n                            \n                                    \n                                getBalance\n                            \n                            \n                                    \n                                getStatement\n                            \n                            \n                                    \n                                login\n                            \n                            \n                                    \n                                logout\n                            \n                            \n                                    \n                                newAccount\n                            \n                            \n                                    \n                                withdraw\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deposit\n                        \n                    \n                \n            \n            \n                \n                        \n                    deposit(token: string, transaction: TransactionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/deposit-amount/:token')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/controllers/v1/v1.controller.ts:77\n                        \n                    \n\n\n            \n                \n                        Performs the deposit transaction\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user token\n\n                                            \n                                        \n                                        \n                                                transaction\n                                            \n                                                            TransactionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The transaction information\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                the result of the transaction\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getBalance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBalance(token: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/get-balance/:token')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/controllers/v1/v1.controller.ts:66\n                        \n                    \n\n\n            \n                \n                        Get's the user's ballance\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user token\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                the result of the transaction\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getStatement\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStatement(token: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/get-statement/:token')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/controllers/v1/v1.controller.ts:55\n                        \n                    \n\n\n            \n                \n                        Get's the user's balance\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user token\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                the result of the transaction\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginCredentials: LoginCredentials)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/login')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/controllers/v1/v1.controller.ts:34\n                        \n                    \n\n\n            \n                \n                        perform's the login functionality\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                loginCredentials\n                                            \n                                                            LoginCredentials\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User login credentials\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                The user's login token\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(token: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/logout/:token')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/controllers/v1/v1.controller.ts:44\n                        \n                    \n\n\n            \n                \n                        Log's the user out of the system\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The token that the user used\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                The logout message\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        newAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    newAccount(userDTO: UserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/new-account')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/controllers/v1/v1.controller.ts:24\n                        \n                    \n\n\n            \n                \n                        Stores the user information\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userDTO\n                                            \n                                                            UserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User data to be stored into the database\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                the account created response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        withdraw\n                        \n                    \n                \n            \n            \n                \n                        \n                    withdraw(token: string, transaction: TransactionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/withdraw-amount/:token')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/controllers/v1/v1.controller.ts:88\n                        \n                    \n\n\n            \n                \n                        Performs the withdrawal transaction\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user token\n\n                                            \n                                        \n                                        \n                                                transaction\n                                            \n                                                            TransactionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The transaction information\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                the result of the transaction\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post } from '@nestjs/common';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { Observable, delay, of } from 'rxjs';\nimport { LoginCredentials, UserDto } from '../../../identity/models/user.model';\nimport { BankingGatewayService } from 'src/v1/services/banking.service';\nimport { TransactionDto } from 'src/banking/models/banking';\nimport { DataResponse } from 'src/base/response';\n\n@Controller('v1/banking')\nexport class V1Controller {\n\n  /**\n   * \n   * @param bankingService The banking service\n   */\n  constructor(public bankingService: BankingGatewayService) { }\n  \n  /**\n   * Stores the user information\n   * @param userDTO User data to be stored into the database\n   * @returns {Observable>} the account created response\n   */\n  @Post(\"/new-account\")\n  newAccount(@Body() userDTO: UserDto): Observable> {\n    return this.bankingService.createAccount$(userDTO);\n  }\n\n  /**\n   * perform's the login functionality\n   * @param loginCredentials User login credentials\n   * @returns {Observable>} The user's login token\n   */\n  @Post(\"/login\")\n  login(@Body() loginCredentials: LoginCredentials): Observable> {\n    return this.bankingService.login$(loginCredentials);\n  }\n\n  /**\n   * Log's the user out of the system\n   * @param token The token that the user used\n   * @returns {Observable>} The logout message\n   */\n  @Post(\"/logout/:token\")\n  logout(@Param('token') token: string,): Observable> {\n    return this.bankingService.logout$(token);\n  }\n\n  /**\n   * Get's the user's balance\n   * @param token The user token\n   * @param transaction The transaction information\n   * @returns {Observable>} the result of the transaction\n   */\n  @Get(\"/get-statement/:token\")\n  getStatement(@Param('token') token: string,): Observable> {\n    return this.bankingService.getStatement$(token);\n  }\n\n  /**\n   * Get's the user's ballance\n   * @param token The user token\n   * @param transaction The transaction information\n   * @returns {Observable>} the result of the transaction\n   */\n  @Get(\"/get-balance/:token\")\n  getBalance(@Param('token') token: string,): Observable> {\n    return this.bankingService.getBalance$(token);\n  }\n\n  /**\n   * Performs the deposit transaction\n   * @param token The user token\n   * @param transaction The transaction information\n   * @returns {Observable>} the result of the transaction\n   */\n  @Post(\"/deposit-amount/:token\")\n  deposit(@Param('token') token: string, @Body() transaction: TransactionDto): Observable> {\n    return this.bankingService.depositAmount$(token, transaction);\n  }\n\n  /**\n   * Performs the withdrawal transaction\n   * @param token The user token\n   * @param transaction The transaction information\n   * @returns {Observable>} the result of the transaction\n   */\n  @Post(\"/withdraw-amount/:token\")\n  withdraw(@Param('token') token: string, @Body() transaction: TransactionDto): Observable> {\n    return this.bankingService.withdrawMoney$(token, transaction);\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/V1Module.html":{"url":"modules/V1Module.html","title":"module - V1Module","body":"\n                   \n\n\n\n\n    Modules\n    V1Module\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_V1Module\n\n\n\ncluster_V1Module_providers\n\n\n\n\nBankingGatewayService\n\nBankingGatewayService\n\n\n\nV1Module\n\nV1Module\n\nV1Module -->\n\nBankingGatewayService->V1Module\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/v1/v1.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BankingGatewayService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            V1Controller\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport {V1Controller } from './controllers/v1/v1.controller';\nimport { MessengerModule } from 'src/messenger/messenger.module';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { BankingGatewayService } from './services/banking.service';\n\n@Module({\n    imports: [ClientsModule.register([\n        {\n            name: 'banking',\n          transport: Transport.NATS,\n          options: {\n            servers: ['nats://localhost:4222'],\n            //host: '127.0.0.1',\n            //port: 8888,\n          },\n        }]),],\n    controllers: [V1Controller],\n    providers: [BankingGatewayService]\n})\nexport class V1Module {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/banking/controllers/banking.controller.ts\n            \n            controller\n            BankingController\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/banking/entities/statement.entity.ts\n            \n            entity\n            StatementEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/banking/models/banking.ts\n            \n            class\n            TransactionDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/banking/services/banking.service.ts\n            \n            injectable\n            BankingService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/base/base.dto.ts\n            \n            class\n            BaseDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/base/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/base/response.ts\n            \n            class\n            DataResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/identity/controller/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/identity/entities/login.entity.ts\n            \n            entity\n            LoginEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/identity/entities/user.entity.ts\n            \n            entity\n            UserEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/identity/models/user.model.ts\n            \n            class\n            LoginCredentials\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/identity/models/user.model.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/identity/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/messenger/controller/messages.controller.ts\n            \n            controller\n            MessagesController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/messenger/entities/message-log.entity.ts\n            \n            entity\n            MessageLogEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/messenger/models/message.model.ts\n            \n            class\n            MessageModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/messenger/services/messages.service.ts\n            \n            injectable\n            MessagesService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/v1/controllers/v1/v1.controller.ts\n            \n            controller\n            V1Controller\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/v1/services/banking.service.ts\n            \n            injectable\n            BankingGatewayService\n            \n                11 %\n                (1/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/microservices : ^10.4.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.4.2\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            mqtt : ^5.10.1\n        \n            nats : ^2.28.2\n        \n            pg : ^8.13.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            sqlite3 : ^5.1.7\n        \n            typeorm : ^0.3.20\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\n\nDownload and install Natt and Postgresql\n\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        BankingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BankServiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentityModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MessengerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        V1Module\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BankingModule\n\n\n\ncluster_BankingModule_imports\n\n\n\ncluster_BankingModule_providers\n\n\n\ncluster_BankServiceModule\n\n\n\ncluster_BankServiceModule_imports\n\n\n\ncluster_IdentityModule\n\n\n\ncluster_IdentityModule_providers\n\n\n\ncluster_MessengerModule\n\n\n\ncluster_MessengerModule_exports\n\n\n\ncluster_MessengerModule_providers\n\n\n\ncluster_V1Module\n\n\n\ncluster_V1Module_providers\n\n\n\n\nMessengerModule\n\nMessengerModule\n\n\n\nBankingModule\n\nBankingModule\n\nBankingModule -->\n\nMessengerModule->BankingModule\n\n\n\nBankingModule -->\n\nMessengerModule->BankingModule\n\n\n\n\n\nIdentityModule\n\nIdentityModule\n\nIdentityModule -->\n\nMessengerModule->IdentityModule\n\n\n\n\n\nMessagesService \n\nMessagesService \n\nMessagesService  -->\n\nMessengerModule->MessagesService \n\n\n\n\n\nBankServiceModule\n\nBankServiceModule\n\nBankServiceModule -->\n\nBankingModule->BankServiceModule\n\n\n\n\n\nBankingService\n\nBankingService\n\nBankingModule -->\n\nBankingService->BankingModule\n\n\n\nBankServiceModule -->\n\nIdentityModule->BankServiceModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nIdentityModule -->\n\nAuthService->IdentityModule\n\n\n\n\n\nMessagesService\n\nMessagesService\n\nMessengerModule -->\n\nMessagesService->MessengerModule\n\n\n\n\n\nBankingGatewayService\n\nBankingGatewayService\n\n\n\nV1Module\n\nV1Module\n\nV1Module -->\n\nBankingGatewayService->V1Module\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
